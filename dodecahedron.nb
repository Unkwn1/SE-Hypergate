(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    217396,       3902]
NotebookOptionsPosition[    216398,       3878]
NotebookOutlinePosition[    216835,       3895]
CellTagsIndexPosition[    216792,       3892]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"p", " ", "=", " ", 
   RowBox[{"PolyhedronData", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "0", ","}], " ", "}"}], "pname"}], " ", "=", 
      " ", "\"\<PentakisDodecahedron\>\""}], ",", " ", "\"\<Polyhedron\>\""}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"transformed", "=", 
  RowBox[{"TransformedRegion", "[", 
   RowBox[{"p", ",", 
    RowBox[{"RotationTransform", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "1", ",", " ", "1"}], "}"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"target", " ", "=", " ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", " ", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", "0.29737395449823"}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.94155024712979"}]}], ",", 
            RowBox[{"5", "*", "0.15827780424279"}]}], "}"}]}], "}"}], "]"}]}],
       "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"SVvector0", " ", "=", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", "0.6444904486331"}], ",", 
            RowBox[{"5", "*", "0.20847820715387"}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.73564182776852"}]}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\n", 
    RowBox[{"SVvector1", " ", "=", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", 
             RowBox[{"-", "0.3373248250886"}]}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.39831700267993"}]}], ",", 
            RowBox[{"5", "*", "0.85296865578697"}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\n", 
    RowBox[{"SVvector2", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", 
             RowBox[{"-", "0.3373248250886"}]}], ",", 
            RowBox[{"5", "*", "0.39831700267993"}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.85296865578697"}]}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\n", 
    RowBox[{"SVvector3", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", 
             RowBox[{"-", "0.3373248250886"}]}], ",", 
            RowBox[{"5", "*", "0.39831700267993"}], ",", 
            RowBox[{"5", "*", "0.85296865578697"}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\n", 
    RowBox[{"SVvector4", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", 
             RowBox[{"-", "0.9818152737217"}]}], ",", 
            RowBox[{"5", "*", "0"}], ",", 
            RowBox[{"5", "*", "0.18983879552606"}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\n", 
    RowBox[{"SVvector5", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", "0"}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.18983879552606"}]}], ",", 
            RowBox[{"5", "*", "0.9818152737217"}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\n", 
    RowBox[{"SVvector6", "=", "  ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", "0.3373248250886"}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.39831700267993"}]}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.85296865578697"}]}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\n", 
    RowBox[{"SVvector7", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", 
             RowBox[{"-", "0.6444904486331"}]}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.20847820715387"}]}], ",", 
            RowBox[{"5", "*", "0.73564182776852"}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\n", 
    RowBox[{"SVvector8", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", 
             RowBox[{"-", "0.73564182776852"}]}], ",", 
            RowBox[{"5", "*", "0.6444904486331"}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.20847820715387"}]}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\n", 
    RowBox[{"SVvector9", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", 
             RowBox[{"-", "0.39831700267993"}]}], ",", 
            RowBox[{"5", "*", "0.85296865578697"}], ",", 
            RowBox[{"5", "*", "0.3373248250886"}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\n", 
    RowBox[{"SVvector10", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", 
             RowBox[{"-", "0.85296865578697"}]}], ",", 
            RowBox[{"5", "*", "0.3373248250886"}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.39831700267993"}]}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\n", 
    RowBox[{"SVvector11", "=", "  ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", 
             RowBox[{"-", "0.6444904486331"}]}], ",", 
            RowBox[{"5", "*", "0.20847820715387"}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.73564182776852"}]}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\n", 
    RowBox[{"SVvector12", "=", "  ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", 
             RowBox[{"-", "0.85296865578697"}]}], ",", 
            RowBox[{"5", "*", "0.3373248250886"}], ",", 
            RowBox[{"5", "*", "0.39831700267993"}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\n", 
    RowBox[{"SVvector13", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", 
             RowBox[{"-", "0.85296865578697"}]}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.3373248250886"}]}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.39831700267993"}]}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\n", 
    RowBox[{"SVvector14", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", "0.18983879552606"}], ",", 
            RowBox[{"5", "*", "0.9818152737217"}], ",", 
            RowBox[{"5", "*", "0"}]}], "}"}]}], "}"}], "]"}], "}"}], "]"}]}], 
    ";", "\n", 
    RowBox[{"SVvector15", "=", "  ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", "0.39831700267993"}], ",", 
            RowBox[{"5", "*", "0.85296865578697"}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.3373248250886"}]}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\n", 
    RowBox[{"SVvector16", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", "0.85296865578697"}], ",", 
            RowBox[{"5", "*", "0.3373248250886"}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.39831700267993"}]}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"SVvector17", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", 
             RowBox[{"-", "0.18983879552606"}]}], ",", 
            RowBox[{"5", "*", "0.9818152737217"}], ",", 
            RowBox[{"5", "*", "0"}]}], "}"}]}], "}"}], "]"}], "}"}], "]"}]}], 
    ";", "\n", 
    RowBox[{"SVvector18", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", "0.6444904486331"}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.20847820715387"}]}], ",", 
            RowBox[{"5", "*", "0.73564182776852"}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\n", 
    RowBox[{"SVvector19", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", 
             RowBox[{"-", "0.73564182776852"}]}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.6444904486331"}]}], ",", 
            RowBox[{"5", "*", "0.20847820715387"}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\n", 
    RowBox[{"SVvector20", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", 
             RowBox[{"-", "0.85296865578697"}]}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.3373248250886"}]}], ",", 
            RowBox[{"5", "*", "0.39831700267993"}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\n", 
    RowBox[{"SVvector21", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", "0.6444904486331"}], ",", 
            RowBox[{"5", "*", "0.20847820715387"}], ",", 
            RowBox[{"5", "*", "0.73564182776852"}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\n", 
    RowBox[{"SVvector22", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", "0.3373248250886"}], ",", 
            RowBox[{"5", "*", "0.39831700267993"}], ",", 
            RowBox[{"5", "*", "0.85296865578697"}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\n", 
    RowBox[{"SVvector23", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", "0.9818152737217"}], ",", 
            RowBox[{"5", "*", "0"}], ",", 
            RowBox[{"5", "*", "0.18983879552606"}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\n", 
    RowBox[{"SVvector24", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", 
             RowBox[{"-", "0.20847820715387"}]}], ",", 
            RowBox[{"5", "*", "0.73564182776852"}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.6444904486331"}]}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\n", 
    RowBox[{"SVvector25", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", "0.85296865578697"}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.3373248250886"}]}], ",", 
            RowBox[{"5", "*", "0.39831700267993"}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\n", 
    RowBox[{"SVvector26", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", "0"}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.18983879552606"}]}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.9818152737217"}]}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\n", 
    RowBox[{"SVvector27", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", "0.6444904486331"}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.20847820715387"}]}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.73564182776852"}]}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\n", 
    RowBox[{"SVvector28", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", 
             RowBox[{"-", "0.6444904486331"}]}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.20847820715387"}]}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.73564182776852"}]}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";", "\n", 
    RowBox[{"SVvector29", " ", "=", " ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", 
             RowBox[{"-", "0.6444904486331"}]}], ",", 
            RowBox[{"5", "*", "0.20847820715387"}], ",", 
            RowBox[{"5", "*", "0.73564182776852"}]}], "}"}]}], "}"}], "]"}], 
       "}"}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"exp1Vector", " ", "=", " ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Yellow", ",", 
      RowBox[{"Arrow", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"5", "*", "0.39831700267993"}], ",", 
           RowBox[{"5", "*", 
            RowBox[{"-", "0.85296865578697"}]}], ",", 
           RowBox[{"5", "*", "0.3373248250886"}]}], "}"}]}], "}"}], "]"}]}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"expVector", " ", "=", " ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Green", ",", 
      RowBox[{"Arrow", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"5", "*", "0.18983879552606"}], ",", 
           RowBox[{"5", "*", 
            RowBox[{"-", "0.9818152737217"}]}], ",", "0"}], "}"}]}], "}"}], 
       "]"}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"corner1", " ", "=", " ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "*", "0.48988593093325"}], ",", 
          RowBox[{"5", "*", 
           RowBox[{"-", "0.87178654192048"}]}], ",", "0"}], "}"}]}], "}"}], 
      "]"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cornersub1", " ", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "*", "0.51433982238742"}], ",", 
          RowBox[{"5", "*", 
           RowBox[{"-", "0.8566732058446"}]}], ",", 
          RowBox[{"5", "*", "0.039567227530049"}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cornersub2", " ", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "*", "0.04680844957639"}], ",", 
          RowBox[{"5", "*", 
           RowBox[{"-", "0.93269639809898"}]}], ",", 
          RowBox[{"5", "*", "0.35761207756651"}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"corner2", " ", "=", " ", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "*", "0.022309014248043"}], ",", 
          RowBox[{"5", "*", 
           RowBox[{"-", "0.94783788183708"}]}], ",", 
          RowBox[{"5", "*", "0.31797115850007"}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subvector1", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", 
      RowBox[{"Arrow", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"5", "*", "0.30839991656099"}], ",", 
           RowBox[{"5", "*", 
            RowBox[{"-", "0.92406741433044"}]}], ",", 
           RowBox[{"5", "*", "0.22580723026029"}]}], "}"}]}], "}"}], "]"}]}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"subvector2", "=", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"5", "*", "0.32727643077725"}], ",", 
            RowBox[{"5", "*", 
             RowBox[{"-", "0.94492864167497"}]}], ",", "0"}], "}"}]}], "}"}], 
        "]"}]}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics3D", "[", "transformed", "]"}], ",", " ", "target", ",", 
   " ", 
   RowBox[{"(*", 
    RowBox[{
    "SVvector0", ",", " ", "SVvector1", ",", " ", "SVvector2", ",", " ", 
     "SVvector3", ",", " ", "SVvector4", ",", " ", "SVvector5", ",", " ", 
     "SVvector6", ",", " ", "SVvector7", ",", " ", "SVvector8", ",", " ", 
     "SVvector9", ",", " ", "SVvector10", ",", " ", "SVvector11", ",", " ", 
     "SVvector12", ",", " ", "SVvector13", ",", " ", "SVvector14", ",", " ", 
     "SVvector15", ",", " ", "SVvector16", ",", " ", "SVvector17", ",", " ", 
     "SVvector18", ",", " ", "SVvector19", ",", "SVvector20", ",", " ", 
     "SVvector21", ",", " ", "SVvector22", ",", " ", "SVvector23", ",", " ", 
     "SVvector24", ",", " ", "SVvector25", ",", " ", "SVvector26", ",", " ", 
     "SVvector27", ",", " ", "SVvector28", ",", " ", "SVvector29", ","}], 
    "*)"}], " ", "corner1", ",", " ", "corner2", ",", " ", "cornersub1", ",", 
   " ", "cornersub2", ",", " ", "expVector", ",", " ", "exp1Vector", ",", " ",
    "subvector1", ",", 
   RowBox[{"ImageSize", "->", "Full"}], ",", " ", 
   RowBox[{"Axes", "->", "True"}], ",", " ", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "y", ",", " ", "z"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9074526772080064`*^9, 3.9074526986156883`*^9}, {
   3.907452730764616*^9, 3.9074527593025093`*^9}, {3.907452812287957*^9, 
   3.9074529100928426`*^9}, {3.907452983991167*^9, 3.9074530722359247`*^9}, {
   3.907453112244276*^9, 3.9074531419052095`*^9}, {3.9074532219022694`*^9, 
   3.907453276682197*^9}, {3.9074533293859835`*^9, 3.907453369475093*^9}, {
   3.907453402903082*^9, 3.907453412873398*^9}, {3.9074534611910467`*^9, 
   3.907453501252099*^9}, {3.907453589313429*^9, 3.9074539802204514`*^9}, {
   3.9074540577025843`*^9, 3.907454262564066*^9}, 3.907454308775175*^9, {
   3.907454472731959*^9, 3.9074544728499374`*^9}, {3.907454511758959*^9, 
   3.907454626281203*^9}, {3.9074550499303784`*^9, 3.907455059938192*^9}, {
   3.9074552645967107`*^9, 3.90745527825008*^9}, {3.907455319130908*^9, 
   3.907455336538663*^9}, {3.9074554047493477`*^9, 3.9074554441984673`*^9}, {
   3.907455478326741*^9, 3.9074554949195566`*^9}, 3.9074555744595823`*^9, {
   3.9074556160388327`*^9, 3.907455639503524*^9}, {3.907455675899892*^9, 
   3.9074556759701633`*^9}, 3.9074557502192707`*^9, {3.907456830773259*^9, 
   3.907456868575552*^9}, {3.907456903431143*^9, 3.907456909851427*^9}, {
   3.907456965113575*^9, 3.907456991327921*^9}, {3.9074571064781313`*^9, 
   3.907457216335311*^9}, {3.9075417769015017`*^9, 3.90754177847507*^9}, {
   3.9075418539831*^9, 3.907541858517481*^9}, 3.907542015662637*^9, {
   3.9075420478567195`*^9, 3.907542062290411*^9}, {3.9075422322410307`*^9, 
   3.9075422719332104`*^9}, {3.9075425236850605`*^9, 
   3.9075425560424013`*^9}, {3.9075425896367927`*^9, 3.907542591182967*^9}, {
   3.907542886069044*^9, 3.907542890442296*^9}, {3.907543707822173*^9, 
   3.9075437640654383`*^9}, {3.9075439767720695`*^9, 
   3.9075439827712045`*^9}, {3.9075442389960365`*^9, 
   3.9075442448056836`*^9}, {3.9075443252639523`*^9, 3.907544353222769*^9}, {
   3.9075445832193236`*^9, 3.9075446529290657`*^9}, 3.9075446847489214`*^9, {
   3.9075448890375357`*^9, 3.9075449126448126`*^9}, {3.907545420262128*^9, 
   3.9075454524632297`*^9}, {3.9075456140450907`*^9, 3.907545620868433*^9}, {
   3.9075458985294743`*^9, 3.907545905160881*^9}, {3.907546127664647*^9, 
   3.907546175824395*^9}, {3.9075463938886304`*^9, 3.9075464084597864`*^9}, {
   3.907550467396881*^9, 3.907550514372286*^9}},
 CellLabel->
  "In[879]:=",ExpressionUUID->"6d6cce3b-bb0e-486d-b770-6adf49ff0ce7"],

Cell[BoxData[
 TemplateBox[{
  "Set", "write", 
   "\"Tag \\!\\(\\*RowBox[{\\\"Times\\\"}]\\) in \\!\\(\\*RowBox[{\\\"pname\\\
\", \\\" \\\", RowBox[{\\\"{\\\", RowBox[{\\\"1\\\", \\\",\\\", \\\"0\\\", \\\
\",\\\", \\\"Null\\\"}], \\\"}\\\"}]}]\\) is Protected.\"", 2, 879, 41, 
   31306963499114750301, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.9074554956800566`*^9, 3.9074556443032627`*^9, 3.9074556767988462`*^9, {
   3.9074557384983063`*^9, 3.907455750909442*^9}, 3.9074565016396065`*^9, 
   3.907456831180752*^9, 3.907456869654764*^9, 3.907456911147952*^9, 
   3.9074569920434103`*^9, {3.907457046147331*^9, 3.9074570737330093`*^9}, {
   3.9074571156754313`*^9, 3.907457216581251*^9}, 3.9075386971002417`*^9, 
   3.9075405109477315`*^9, 3.907541730152525*^9, 3.9075417787359066`*^9, 
   3.9075418259267597`*^9, 3.907541859472457*^9, 3.9075420078819666`*^9, {
   3.907542050381877*^9, 3.9075420634814095`*^9}, {3.9075425359509497`*^9, 
   3.9075425565053105`*^9}, 3.907542591657045*^9, 3.9075428909719973`*^9, 
   3.9075431054828224`*^9, 3.9075433557002087`*^9, 3.9075437703871307`*^9, 
   3.907543983402766*^9, 3.907544245178421*^9, {3.9075443477015257`*^9, 
   3.9075443536250677`*^9}, {3.9075446641628675`*^9, 3.907544685241231*^9}, {
   3.9075449062942443`*^9, 3.9075449130910482`*^9}, 3.9075450147697325`*^9, 
   3.9075454527875285`*^9, 3.907545621237381*^9, 3.9075459058903456`*^9, 
   3.907546178031845*^9, 3.9075464087930017`*^9, {3.907550475645501*^9, 
   3.907550551969719*^9}},
 CellLabel->
  "During evaluation of \
In[879]:=",ExpressionUUID->"8653b95c-161a-411b-ba35-8b0bef836211"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Polyhedron",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready", 
    Typeset`spolyhedron$$ = Quiet[
     Polyhedron[{{
        Root[361 - 765 #^2 + 405 #^4& , 2, 0], 0, 
        Rational[1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {(1 + 
         2 5^Rational[-1, 2])^Rational[1, 2], 0, 
        Rational[1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
       0, 0, Rational[1, 2] (5 + 2 5^Rational[1, 2])^Rational[1, 2]}, {
        Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (-1 - 5^Rational[1, 2]), 
        Rational[1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
        Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (1 + 5^Rational[1, 2]), 
        Rational[1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
       0, 0, Rational[-1, 2] (5 + 2 5^Rational[1, 2])^Rational[1, 2]}, {(
         Rational[1, 8] + Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
        Rational[1, 4] (-3 - 5^Rational[1, 2]), 
        Rational[1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {(
         Rational[1, 8] + Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
        Rational[1, 4] (3 + 5^Rational[1, 2]), 
        Rational[1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
       Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2], 
        Rational[1, 6] (-1 - 2 5^Rational[1, 2]), 
        Rational[1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {
       Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2], 
        Rational[1, 6] (1 + 2 5^Rational[1, 2]), 
        Rational[1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {(
         Rational[25, 72] + Rational[41, 72] 5^Rational[-1, 2])^
        Rational[1, 2], Rational[1, 12] (9 - 5^Rational[1, 2]), 
        Rational[1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {(
         Rational[25, 72] + Rational[41, 72] 5^Rational[-1, 2])^
        Rational[1, 2], Rational[1, 12] (-9 + 5^Rational[1, 2]), 
        Rational[1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {
       Rational[1, 3] (Rational[1, 10] (85 - 5^Rational[1, 2]))^
         Rational[1, 2], 0, 
        Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {
       Rational[1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2], 
        Rational[1, 6] (-1 - 2 5^Rational[1, 2]), 
        Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {
       Rational[1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2], 
        Rational[1, 6] (1 + 2 5^Rational[1, 2]), 
        Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {
       Rational[-1, 6] (Rational[25, 2] + Rational[41, 2] 5^Rational[-1, 2])^
         Rational[1, 2], Rational[1, 12] (9 - 5^Rational[1, 2]), 
        Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {
       Rational[-1, 6] (Rational[25, 2] + Rational[41, 2] 5^Rational[-1, 2])^
         Rational[1, 2], Rational[1, 12] (-9 + 5^Rational[1, 2]), 
        Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {
       Rational[1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2], 
        Rational[1, 6] (-1 - 2 5^Rational[1, 2]), 
        Rational[1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {
       Rational[-1, 6] (Rational[1, 10] (85 - 5^Rational[1, 2]))^
         Rational[1, 2], Rational[1, 12] (-11 - 3 5^Rational[1, 2]), 
        Rational[1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {
       Rational[1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2], 
        Rational[1, 6] (1 + 2 5^Rational[1, 2]), 
        Rational[1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {
       Rational[-1, 6] (Rational[1, 10] (85 - 5^Rational[1, 2]))^
         Rational[1, 2], Rational[1, 12] (11 + 3 5^Rational[1, 2]), 
        Rational[1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {
       Rational[-1, 3] (Rational[25, 2] + Rational[41, 2] 5^Rational[-1, 2])^
         Rational[1, 2], 0, 
        Rational[1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {(
         Rational[25, 18] + Rational[41, 18] 5^Rational[-1, 2])^
        Rational[1, 2], 0, 
        Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {
       Rational[1, 6] (Rational[1, 10] (85 - 5^Rational[1, 2]))^
         Rational[1, 2], Rational[1, 12] (-11 - 3 5^Rational[1, 2]), 
        Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {
       Rational[1, 6] (Rational[1, 10] (85 - 5^Rational[1, 2]))^
         Rational[1, 2], Rational[1, 12] (11 + 3 5^Rational[1, 2]), 
        Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {
       Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2], 
        Rational[1, 6] (-1 - 2 5^Rational[1, 2]), 
        Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {
       Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2], 
        Rational[1, 6] (1 + 2 5^Rational[1, 2]), 
        Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {(
         Rational[5, 8] + Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], 
        Rational[1, 4] (-1 - 5^Rational[1, 2]), 
        Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^
         Rational[1, 2]}, {-(1 + 2 5^Rational[-1, 2])^Rational[1, 2], 0, 
        Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {(
         Rational[5, 8] + Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], 
        Rational[1, 4] (1 + 5^Rational[1, 2]), 
        Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
        Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (-3 - 5^Rational[1, 2]), 
        Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
        Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
        Rational[1, 4] (3 + 5^Rational[1, 2]), 
        Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^
         Rational[1, 2]}}, CompressedData["
1:eJxNkUkSgjAQRRllBoEEZJJ4D0/hETyA3n9nd9WzKotXkJ/u30Me7+/rEwVB
8BRiIRMKYRSsUAq5cAqtcBMWoROccEHvuRuJVf1KnCXH4V17tUby9Fx59Rby
Gvwv0KFl5A3EG3ISIRQm0P+UuqF3X6Kv9H7Sn/a80U9IXky8nnf6aUD7udNH
TV85sxj81P9A05iIuVfqbszqiOu528g/qKv1ZmioO1N752zQIvR/vPHqFuwh
ZS7LLlvPp2OfK3s8+G78J9yN+FjuBrx28g1+EbMPaBVajF7hOeGb4jfx7r23
y5a9dWiOvdfMVuKn7/ADnzANmw==
      "]]]}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            Graphics3DBox[{
              Directive[
               Hue[0.58, 0.4, 1], 
               Opacity[0.5], 
               EdgeForm[
                GrayLevel[1]]], 
              PolyhedronBox[
               NCache[{{
                  Root[361 - 765 #^2 + 405 #^4& , 2, 0], 0, 
                  Rational[1, 6] (29 + 62 5^Rational[-1, 2])^
                   Rational[1, 2]}, {(1 + 2 5^Rational[-1, 2])^Rational[1, 2],
                   0, Rational[1, 2] (1 + 2 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 0, 0, Rational[1, 2] (5 + 2 5^Rational[1, 2])^
                   Rational[1, 2]}, {
                  Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
                  Rational[1, 4] (-1 - 5^Rational[1, 2]), 
                  Rational[1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
                  Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
                  Rational[1, 4] (1 + 5^Rational[1, 2]), 
                  Rational[1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
                 0, 0, Rational[-1, 2] (5 + 2 5^Rational[1, 2])^
                   Rational[1, 2]}, {(Rational[1, 8] + 
                   Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 4] (-3 - 5^Rational[1, 2]), 
                  Rational[1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {(
                   Rational[1, 8] + Rational[1, 8] 5^Rational[-1, 2])^
                  Rational[1, 2], Rational[1, 4] (3 + 5^Rational[1, 2]), 
                  Rational[1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
                 Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 6] (-1 - 2 5^Rational[1, 2]), 
                  Rational[1, 6] (29 + 62 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 6] (1 + 2 5^Rational[1, 2]), 
                  Rational[1, 6] (29 + 62 5^Rational[-1, 2])^
                   Rational[1, 2]}, {(Rational[25, 72] + 
                   Rational[41, 72] 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 12] (9 - 5^Rational[1, 2]), 
                  Rational[1, 6] (29 + 62 5^Rational[-1, 2])^
                   Rational[1, 2]}, {(Rational[25, 72] + 
                   Rational[41, 72] 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 12] (-9 + 5^Rational[1, 2]), 
                  Rational[1, 6] (29 + 62 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[1, 3] (Rational[1, 10] (85 - 5^Rational[1, 2]))^
                   Rational[1, 2], 0, 
                  Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 6] (-1 - 2 5^Rational[1, 2]), 
                  Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 6] (1 + 2 5^Rational[1, 2]), 
                  Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[-1, 6] (Rational[25, 2] + 
                    Rational[41, 2] 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 12] (9 - 5^Rational[1, 2]), 
                  Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[-1, 6] (Rational[25, 2] + 
                    Rational[41, 2] 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 12] (-9 + 5^Rational[1, 2]), 
                  Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 6] (-1 - 2 5^Rational[1, 2]), 
                  Rational[1, 6] (13 - 22 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[-1, 6] (Rational[1, 10] (85 - 5^Rational[1, 2]))^
                   Rational[1, 2], Rational[1, 12] (-11 - 3 5^Rational[1, 2]),
                   Rational[1, 6] (13 - 22 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 6] (1 + 2 5^Rational[1, 2]), 
                  Rational[1, 6] (13 - 22 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[-1, 6] (Rational[1, 10] (85 - 5^Rational[1, 2]))^
                   Rational[1, 2], Rational[1, 12] (11 + 3 5^Rational[1, 2]), 
                  Rational[1, 6] (13 - 22 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[-1, 3] (Rational[25, 2] + 
                    Rational[41, 2] 5^Rational[-1, 2])^Rational[1, 2], 0, 
                  Rational[1, 6] (13 - 22 5^Rational[-1, 2])^
                   Rational[1, 2]}, {(Rational[25, 18] + 
                   Rational[41, 18] 5^Rational[-1, 2])^Rational[1, 2], 0, 
                  Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[1, 6] (Rational[1, 10] (85 - 5^Rational[1, 2]))^
                   Rational[1, 2], Rational[1, 12] (-11 - 3 5^Rational[1, 2]),
                   Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[1, 6] (Rational[1, 10] (85 - 5^Rational[1, 2]))^
                   Rational[1, 2], Rational[1, 12] (11 + 3 5^Rational[1, 2]), 
                  Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 6] (-1 - 2 5^Rational[1, 2]), 
                  Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 6] (1 + 2 5^Rational[1, 2]), 
                  Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^
                   Rational[1, 2]}, {(Rational[5, 8] + 
                   Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 4] (-1 - 5^Rational[1, 2]), 
                  Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^
                   Rational[1, 2]}, {-(1 + 2 5^Rational[-1, 2])^
                   Rational[1, 2], 0, 
                  Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^
                   Rational[1, 2]}, {(Rational[5, 8] + 
                   Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 4] (1 + 5^Rational[1, 2]), 
                  Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
                  Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
                  Rational[1, 4] (-3 - 5^Rational[1, 2]), 
                  Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
                  Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
                  Rational[1, 4] (3 + 5^Rational[1, 2]), 
                  Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^
                   Rational[1, 2]}}, {{-0.9589573737630087, 0, 
                  1.2552914991369466`}, {
                 1.3763819204711736`, 0, 0.6881909602355868}, {
                 0, 0, 1.5388417685876268`}, {-1.1135163644116068`, \
-0.8090169943749475, 0.6881909602355868}, {-1.1135163644116068`, 
                 0.8090169943749475, 0.6881909602355868}, {
                 0, 0, -1.5388417685876268`}, {
                 0.42532540417601994`, -1.3090169943749475`, 
                 0.6881909602355868}, {0.42532540417601994`, 
                 1.3090169943749475`, 
                 0.6881909602355868}, {-0.296334125373938, \
-0.9120226591665965, 1.2552914991369466`}, {-0.296334125373938, 
                 0.9120226591665965, 1.2552914991369466`}, {
                 0.7758128122554423, 0.5636610018750174, 
                 1.2552914991369466`}, {
                 0.7758128122554423, -0.5636610018750174, 
                 1.2552914991369466`}, {
                 0.9589573737630086, 0, -1.2552914991369466`}, {
                 0.296334125373938, -0.9120226591665965, \
-1.2552914991369466`}, {0.296334125373938, 
                 0.9120226591665965, -1.2552914991369466`}, \
{-0.7758128122554423, 
                 0.5636610018750174, -1.2552914991369466`}, \
{-0.7758128122554423, -0.5636610018750174, -1.2552914991369466`}, {
                 1.2552914991369466`, -0.9120226591665965, 
                 0.296334125373938}, {-0.4794786868815043, -1.475683661041614,
                  0.296334125373938}, {1.2552914991369466`, 
                 0.9120226591665965, 0.296334125373938}, {-0.4794786868815043,
                  1.475683661041614, 
                 0.296334125373938}, {-1.5516256245108846`, 0, 
                  0.296334125373938}, {
                 1.5516256245108846`, 0, -0.296334125373938}, {
                 0.4794786868815043, -1.475683661041614, -0.296334125373938}, \
{0.4794786868815043, 
                 1.475683661041614, -0.296334125373938}, \
{-1.2552914991369466`, -0.9120226591665965, -0.296334125373938}, \
{-1.2552914991369466`, 0.9120226591665965, -0.296334125373938}, {
                 1.1135163644116066`, -0.8090169943749475, \
-0.6881909602355868}, {-1.3763819204711736`, 0, -0.6881909602355868}, {
                 1.1135163644116066`, 
                 0.8090169943749475, -0.6881909602355868}, \
{-0.42532540417601994`, -1.3090169943749475`, -0.6881909602355868}, \
{-0.42532540417601994`, 1.3090169943749475`, -0.6881909602355868}}], {{7, 9, 
               19}, {21, 10, 8}, {31, 14, 24}, {25, 15, 32}, {6, 14, 17}, {24,
                19, 31}, {6, 16, 15}, {21, 25, 32}, {9, 12, 3}, {7, 19, 24}, {
               3, 11, 10}, {8, 25, 21}, {13, 14, 6}, {6, 15, 13}, {7, 24, 
               18}, {8, 20, 25}, {4, 1, 22}, {22, 1, 5}, {9, 1, 4}, {1, 10, 
               5}, {26, 17, 31}, {32, 16, 27}, {3, 1, 9}, {3, 10, 1}, {28, 14,
                13}, {13, 15, 30}, {18, 12, 7}, {8, 11, 20}, {16, 17, 29}, {
               11, 12, 2}, {19, 26, 31}, {27, 21, 32}, {29, 17, 26}, {27, 16, 
               29}, {28, 13, 23}, {23, 13, 30}, {23, 18, 28}, {30, 20, 23}, {
               2, 18, 23}, {23, 20, 2}, {19, 9, 4}, {5, 10, 21}, {24, 14, 
               28}, {30, 15, 25}, {26, 22, 29}, {22, 27, 29}, {4, 26, 19}, {5,
                21, 27}, {18, 24, 28}, {25, 20, 30}, {2, 12, 18}, {20, 11, 
               2}, {3, 12, 11}, {4, 22, 26}, {5, 27, 22}, {6, 17, 16}, {17, 
               14, 31}, {15, 16, 32}, {7, 12, 9}, {10, 11, 8}}]}, ImageSize -> 
             Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification])], Boxed -> False, 
             Lighting -> {{"Ambient", 
                RGBColor[0.4, 0.45, 0.5]}, {"Directional", 
                RGBColor[0.24, 0.27, 0.3], 
                ImageScaled[{2, 0, 2}]}, {"Directional", 
                RGBColor[0.24, 0.27, 0.3], 
                ImageScaled[{2, 2, 2}]}, {"Directional", 
                RGBColor[0.24, 0.27, 0.3], 
                ImageScaled[{0, 2, 2}]}}, Method -> {"ShrinkWrap" -> True}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["32", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Number of faces: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["60", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            Graphics3DBox[{
              Directive[
               Hue[0.58, 0.4, 1], 
               Opacity[0.5], 
               EdgeForm[
                GrayLevel[1]]], 
              PolyhedronBox[
               NCache[{{
                  Root[361 - 765 #^2 + 405 #^4& , 2, 0], 0, 
                  Rational[1, 6] (29 + 62 5^Rational[-1, 2])^
                   Rational[1, 2]}, {(1 + 2 5^Rational[-1, 2])^Rational[1, 2],
                   0, Rational[1, 2] (1 + 2 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 0, 0, Rational[1, 2] (5 + 2 5^Rational[1, 2])^
                   Rational[1, 2]}, {
                  Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
                  Rational[1, 4] (-1 - 5^Rational[1, 2]), 
                  Rational[1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
                  Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
                  Rational[1, 4] (1 + 5^Rational[1, 2]), 
                  Rational[1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
                 0, 0, Rational[-1, 2] (5 + 2 5^Rational[1, 2])^
                   Rational[1, 2]}, {(Rational[1, 8] + 
                   Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 4] (-3 - 5^Rational[1, 2]), 
                  Rational[1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {(
                   Rational[1, 8] + Rational[1, 8] 5^Rational[-1, 2])^
                  Rational[1, 2], Rational[1, 4] (3 + 5^Rational[1, 2]), 
                  Rational[1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
                 Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 6] (-1 - 2 5^Rational[1, 2]), 
                  Rational[1, 6] (29 + 62 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 6] (1 + 2 5^Rational[1, 2]), 
                  Rational[1, 6] (29 + 62 5^Rational[-1, 2])^
                   Rational[1, 2]}, {(Rational[25, 72] + 
                   Rational[41, 72] 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 12] (9 - 5^Rational[1, 2]), 
                  Rational[1, 6] (29 + 62 5^Rational[-1, 2])^
                   Rational[1, 2]}, {(Rational[25, 72] + 
                   Rational[41, 72] 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 12] (-9 + 5^Rational[1, 2]), 
                  Rational[1, 6] (29 + 62 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[1, 3] (Rational[1, 10] (85 - 5^Rational[1, 2]))^
                   Rational[1, 2], 0, 
                  Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 6] (-1 - 2 5^Rational[1, 2]), 
                  Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 6] (1 + 2 5^Rational[1, 2]), 
                  Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[-1, 6] (Rational[25, 2] + 
                    Rational[41, 2] 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 12] (9 - 5^Rational[1, 2]), 
                  Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[-1, 6] (Rational[25, 2] + 
                    Rational[41, 2] 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 12] (-9 + 5^Rational[1, 2]), 
                  Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 6] (-1 - 2 5^Rational[1, 2]), 
                  Rational[1, 6] (13 - 22 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[-1, 6] (Rational[1, 10] (85 - 5^Rational[1, 2]))^
                   Rational[1, 2], Rational[1, 12] (-11 - 3 5^Rational[1, 2]),
                   Rational[1, 6] (13 - 22 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 6] (1 + 2 5^Rational[1, 2]), 
                  Rational[1, 6] (13 - 22 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[-1, 6] (Rational[1, 10] (85 - 5^Rational[1, 2]))^
                   Rational[1, 2], Rational[1, 12] (11 + 3 5^Rational[1, 2]), 
                  Rational[1, 6] (13 - 22 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[-1, 3] (Rational[25, 2] + 
                    Rational[41, 2] 5^Rational[-1, 2])^Rational[1, 2], 0, 
                  Rational[1, 6] (13 - 22 5^Rational[-1, 2])^
                   Rational[1, 2]}, {(Rational[25, 18] + 
                   Rational[41, 18] 5^Rational[-1, 2])^Rational[1, 2], 0, 
                  Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[1, 6] (Rational[1, 10] (85 - 5^Rational[1, 2]))^
                   Rational[1, 2], Rational[1, 12] (-11 - 3 5^Rational[1, 2]),
                   Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[1, 6] (Rational[1, 10] (85 - 5^Rational[1, 2]))^
                   Rational[1, 2], Rational[1, 12] (11 + 3 5^Rational[1, 2]), 
                  Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 6] (-1 - 2 5^Rational[1, 2]), 
                  Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^
                   Rational[1, 2]}, {
                 Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 6] (1 + 2 5^Rational[1, 2]), 
                  Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^
                   Rational[1, 2]}, {(Rational[5, 8] + 
                   Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 4] (-1 - 5^Rational[1, 2]), 
                  Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^
                   Rational[1, 2]}, {-(1 + 2 5^Rational[-1, 2])^
                   Rational[1, 2], 0, 
                  Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^
                   Rational[1, 2]}, {(Rational[5, 8] + 
                   Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], 
                  Rational[1, 4] (1 + 5^Rational[1, 2]), 
                  Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
                  Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
                  Rational[1, 4] (-3 - 5^Rational[1, 2]), 
                  Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
                  Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
                  Rational[1, 4] (3 + 5^Rational[1, 2]), 
                  Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^
                   Rational[1, 2]}}, {{-0.9589573737630087, 0, 
                  1.2552914991369466`}, {
                 1.3763819204711736`, 0, 0.6881909602355868}, {
                 0, 0, 1.5388417685876268`}, {-1.1135163644116068`, \
-0.8090169943749475, 0.6881909602355868}, {-1.1135163644116068`, 
                 0.8090169943749475, 0.6881909602355868}, {
                 0, 0, -1.5388417685876268`}, {
                 0.42532540417601994`, -1.3090169943749475`, 
                 0.6881909602355868}, {0.42532540417601994`, 
                 1.3090169943749475`, 
                 0.6881909602355868}, {-0.296334125373938, \
-0.9120226591665965, 1.2552914991369466`}, {-0.296334125373938, 
                 0.9120226591665965, 1.2552914991369466`}, {
                 0.7758128122554423, 0.5636610018750174, 
                 1.2552914991369466`}, {
                 0.7758128122554423, -0.5636610018750174, 
                 1.2552914991369466`}, {
                 0.9589573737630086, 0, -1.2552914991369466`}, {
                 0.296334125373938, -0.9120226591665965, \
-1.2552914991369466`}, {0.296334125373938, 
                 0.9120226591665965, -1.2552914991369466`}, \
{-0.7758128122554423, 
                 0.5636610018750174, -1.2552914991369466`}, \
{-0.7758128122554423, -0.5636610018750174, -1.2552914991369466`}, {
                 1.2552914991369466`, -0.9120226591665965, 
                 0.296334125373938}, {-0.4794786868815043, -1.475683661041614,
                  0.296334125373938}, {1.2552914991369466`, 
                 0.9120226591665965, 0.296334125373938}, {-0.4794786868815043,
                  1.475683661041614, 
                 0.296334125373938}, {-1.5516256245108846`, 0, 
                  0.296334125373938}, {
                 1.5516256245108846`, 0, -0.296334125373938}, {
                 0.4794786868815043, -1.475683661041614, -0.296334125373938}, \
{0.4794786868815043, 
                 1.475683661041614, -0.296334125373938}, \
{-1.2552914991369466`, -0.9120226591665965, -0.296334125373938}, \
{-1.2552914991369466`, 0.9120226591665965, -0.296334125373938}, {
                 1.1135163644116066`, -0.8090169943749475, \
-0.6881909602355868}, {-1.3763819204711736`, 0, -0.6881909602355868}, {
                 1.1135163644116066`, 
                 0.8090169943749475, -0.6881909602355868}, \
{-0.42532540417601994`, -1.3090169943749475`, -0.6881909602355868}, \
{-0.42532540417601994`, 1.3090169943749475`, -0.6881909602355868}}], {{7, 9, 
               19}, {21, 10, 8}, {31, 14, 24}, {25, 15, 32}, {6, 14, 17}, {24,
                19, 31}, {6, 16, 15}, {21, 25, 32}, {9, 12, 3}, {7, 19, 24}, {
               3, 11, 10}, {8, 25, 21}, {13, 14, 6}, {6, 15, 13}, {7, 24, 
               18}, {8, 20, 25}, {4, 1, 22}, {22, 1, 5}, {9, 1, 4}, {1, 10, 
               5}, {26, 17, 31}, {32, 16, 27}, {3, 1, 9}, {3, 10, 1}, {28, 14,
                13}, {13, 15, 30}, {18, 12, 7}, {8, 11, 20}, {16, 17, 29}, {
               11, 12, 2}, {19, 26, 31}, {27, 21, 32}, {29, 17, 26}, {27, 16, 
               29}, {28, 13, 23}, {23, 13, 30}, {23, 18, 28}, {30, 20, 23}, {
               2, 18, 23}, {23, 20, 2}, {19, 9, 4}, {5, 10, 21}, {24, 14, 
               28}, {30, 15, 25}, {26, 22, 29}, {22, 27, 29}, {4, 26, 19}, {5,
                21, 27}, {18, 24, 28}, {25, 20, 30}, {2, 12, 18}, {20, 11, 
               2}, {3, 12, 11}, {4, 22, 26}, {5, 27, 22}, {6, 17, 16}, {17, 
               14, 31}, {15, 16, 32}, {7, 12, 9}, {10, 11, 8}}]}, ImageSize -> 
             Dynamic[{5.25, 3.5} (CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification])], Boxed -> False, 
             Lighting -> {{"Ambient", 
                RGBColor[0.4, 0.45, 0.5]}, {"Directional", 
                RGBColor[0.24, 0.27, 0.3], 
                ImageScaled[{2, 0, 2}]}, {"Directional", 
                RGBColor[0.24, 0.27, 0.3], 
                ImageScaled[{2, 2, 2}]}, {"Directional", 
                RGBColor[0.24, 0.27, 0.3], 
                ImageScaled[{0, 2, 2}]}}, Method -> {"ShrinkWrap" -> True}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Number of points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["32", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Number of faces: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["60", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Embedding dimension: \"", "SummaryItemAnnotation"],
                  "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Quiet[
                    Apply[Region`PolyhedronDump`polyhedronType, 
                    Region`PolyhedronDump`computeType[
                    Typeset`spolyhedron$$]]], StandardForm], 
                   SynchronousUpdating -> False, TrackedSymbols :> {}, 
                   CachedValue :> 
                   AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Bounds: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Region`PolyhedronDump`iRegionBounds[
                    Typeset`spolyhedron$$], StandardForm], 
                   SynchronousUpdating -> False, TrackedSymbols :> {}, 
                   CachedValue :> 
                   AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Volume: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  DynamicBox[
                   ToBoxes[
                    Region`PolyhedronDump`iVolume[Typeset`spolyhedron$$], 
                    StandardForm], SynchronousUpdating -> False, 
                   TrackedSymbols :> {}, CachedValue :> 
                   AnimatorBox[
                    0, {0, Infinity}, AppearanceElements -> "ProgressSlider", 
                    ImageSize -> 20]], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Polyhedron[{{
     Root[361 - 765 #^2 + 405 #^4& , 2, 0], 0, 
     Rational[1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {(1 + 
      2 5^Rational[-1, 2])^Rational[1, 2], 0, 
     Rational[1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
    0, 0, Rational[1, 2] (5 + 2 5^Rational[1, 2])^Rational[1, 2]}, {
     Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
     Rational[1, 4] (-1 - 5^Rational[1, 2]), 
     Rational[1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
     Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
     Rational[1, 4] (1 + 5^Rational[1, 2]), 
     Rational[1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
    0, 0, Rational[-1, 2] (5 + 2 5^Rational[1, 2])^Rational[1, 2]}, {(
      Rational[1, 8] + Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
     Rational[1, 4] (-3 - 5^Rational[1, 2]), 
     Rational[1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {(
      Rational[1, 8] + Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
     Rational[1, 4] (3 + 5^Rational[1, 2]), 
     Rational[1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
    Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2], 
     Rational[1, 6] (-1 - 2 5^Rational[1, 2]), 
     Rational[1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {
    Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2], 
     Rational[1, 6] (1 + 2 5^Rational[1, 2]), 
     Rational[1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {(
      Rational[25, 72] + Rational[41, 72] 5^Rational[-1, 2])^Rational[1, 2], 
     Rational[1, 12] (9 - 5^Rational[1, 2]), 
     Rational[1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {(
      Rational[25, 72] + Rational[41, 72] 5^Rational[-1, 2])^Rational[1, 2], 
     Rational[1, 12] (-9 + 5^Rational[1, 2]), 
     Rational[1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {
    Rational[1, 3] (Rational[1, 10] (85 - 5^Rational[1, 2]))^Rational[1, 2], 
     0, Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {
    Rational[1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2], 
     Rational[1, 6] (-1 - 2 5^Rational[1, 2]), 
     Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {
    Rational[1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2], 
     Rational[1, 6] (1 + 2 5^Rational[1, 2]), 
     Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {
    Rational[-1, 6] (Rational[25, 2] + Rational[41, 2] 5^Rational[-1, 2])^
      Rational[1, 2], Rational[1, 12] (9 - 5^Rational[1, 2]), 
     Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {
    Rational[-1, 6] (Rational[25, 2] + Rational[41, 2] 5^Rational[-1, 2])^
      Rational[1, 2], Rational[1, 12] (-9 + 5^Rational[1, 2]), 
     Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {
    Rational[1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2], 
     Rational[1, 6] (-1 - 2 5^Rational[1, 2]), 
     Rational[1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {
    Rational[-1, 6] (Rational[1, 10] (85 - 5^Rational[1, 2]))^Rational[1, 2], 
     Rational[1, 12] (-11 - 3 5^Rational[1, 2]), 
     Rational[1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {
    Rational[1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2], 
     Rational[1, 6] (1 + 2 5^Rational[1, 2]), 
     Rational[1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {
    Rational[-1, 6] (Rational[1, 10] (85 - 5^Rational[1, 2]))^Rational[1, 2], 
     Rational[1, 12] (11 + 3 5^Rational[1, 2]), 
     Rational[1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {
    Rational[-1, 3] (Rational[25, 2] + Rational[41, 2] 5^Rational[-1, 2])^
      Rational[1, 2], 0, 
     Rational[1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {(
      Rational[25, 18] + Rational[41, 18] 5^Rational[-1, 2])^Rational[1, 2], 
     0, Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {
    Rational[1, 6] (Rational[1, 10] (85 - 5^Rational[1, 2]))^Rational[1, 2], 
     Rational[1, 12] (-11 - 3 5^Rational[1, 2]), 
     Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {
    Rational[1, 6] (Rational[1, 10] (85 - 5^Rational[1, 2]))^Rational[1, 2], 
     Rational[1, 12] (11 + 3 5^Rational[1, 2]), 
     Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {
    Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2], 
     Rational[1, 6] (-1 - 2 5^Rational[1, 2]), 
     Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {
    Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2], 
     Rational[1, 6] (1 + 2 5^Rational[1, 2]), 
     Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {(
      Rational[5, 8] + Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], 
     Rational[1, 4] (-1 - 5^Rational[1, 2]), 
     Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^
      Rational[1, 2]}, {-(1 + 2 5^Rational[-1, 2])^Rational[1, 2], 0, 
     Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {(
      Rational[5, 8] + Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], 
     Rational[1, 4] (1 + 5^Rational[1, 2]), 
     Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
     Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
     Rational[1, 4] (-3 - 5^Rational[1, 2]), 
     Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
     Root[1 - 20 #^2 + 80 #^4& , 1, 0], Rational[1, 4] (3 + 5^Rational[1, 2]),
      Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^
      Rational[1, 2]}}, CompressedData["
1:eJxNkUkSgjAQRRllBoEEZJJ4D0/hETyA3n9nd9WzKotXkJ/u30Me7+/rEwVB
8BRiIRMKYRSsUAq5cAqtcBMWoROccEHvuRuJVf1KnCXH4V17tUby9Fx59Rby
Gvwv0KFl5A3EG3ISIRQm0P+UuqF3X6Kv9H7Sn/a80U9IXky8nnf6aUD7udNH
TV85sxj81P9A05iIuVfqbszqiOu528g/qKv1ZmioO1N752zQIvR/vPHqFuwh
ZS7LLlvPp2OfK3s8+G78J9yN+FjuBrx28g1+EbMPaBVajF7hOeGb4jfx7r23
y5a9dWiOvdfMVuKn7/ADnzANmw==
   "]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.907454602231663*^9, 3.9074546272327785`*^9}, 
   3.907454671469287*^9, 3.9074554958480425`*^9, 3.9074556443756*^9, 
   3.9074556769191647`*^9, {3.9074557386176496`*^9, 3.907455751093794*^9}, 
   3.9074565018120165`*^9, 3.9074568312573323`*^9, 3.90745686972724*^9, 
   3.907456911213453*^9, 3.907456992102823*^9, {3.907457046200806*^9, 
   3.9074570737742367`*^9}, {3.9074571157857485`*^9, 3.9074572167490053`*^9}, 
   3.907538697560333*^9, 3.9075405110980096`*^9, 3.9075417303297834`*^9, 
   3.9075417788958073`*^9, 3.907541826091699*^9, 3.907541859631027*^9, 
   3.907542008039218*^9, {3.907542050541706*^9, 3.907542063651641*^9}, {
   3.9075425361190586`*^9, 3.9075425566699066`*^9}, 3.9075425918232827`*^9, 
   3.907542891145671*^9, 3.907543105635846*^9, 3.9075433558557415`*^9, 
   3.9075437705601363`*^9, 3.90754398358312*^9, 3.9075442453451242`*^9, {
   3.907544347880357*^9, 3.9075443537867303`*^9}, {3.907544664357026*^9, 
   3.907544685339801*^9}, {3.9075449063686714`*^9, 3.907544913180225*^9}, 
   3.907545014847829*^9, 3.907545452856409*^9, 3.90754562130427*^9, 
   3.907545905961091*^9, 3.907546178095789*^9, 3.907546408857529*^9, {
   3.90755047571369*^9, 3.9075505520104666`*^9}},
 CellLabel->
  "Out[880]=",ExpressionUUID->"e63840bb-5738-4041-93a1-efca27085bb7"],

Cell[BoxData[
 Graphics3DBox[{
   PolyhedronBox[
    NCache[{{Root[361 - 765 #^2 + 405 #^4& , 2, 0], 0, 
       Rational[1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {(1 + 
        2 5^Rational[-1, 2])^Rational[1, 2], 0, 
       Rational[1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
      0, 0, Rational[1, 2] (5 + 2 5^Rational[1, 2])^Rational[1, 2]}, {
      Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
       Rational[1, 4] (-1 - 5^Rational[1, 2]), 
       Rational[1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
      Root[1 - 100 #^2 + 80 #^4& , 1, 0], 
       Rational[1, 4] (1 + 5^Rational[1, 2]), 
       Rational[1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
      0, 0, Rational[-1, 2] (5 + 2 5^Rational[1, 2])^Rational[1, 2]}, {(
        Rational[1, 8] + Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
       Rational[1, 4] (-3 - 5^Rational[1, 2]), 
       Rational[1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {(
        Rational[1, 8] + Rational[1, 8] 5^Rational[-1, 2])^Rational[1, 2], 
       Rational[1, 4] (3 + 5^Rational[1, 2]), 
       Rational[1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
      Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2], 
       Rational[1, 6] (-1 - 2 5^Rational[1, 2]), 
       Rational[1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {
      Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2], 
       Rational[1, 6] (1 + 2 5^Rational[1, 2]), 
       Rational[1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {(
        Rational[25, 72] + Rational[41, 72] 5^Rational[-1, 2])^Rational[1, 2],
        Rational[1, 12] (9 - 5^Rational[1, 2]), 
       Rational[1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {(
        Rational[25, 72] + Rational[41, 72] 5^Rational[-1, 2])^Rational[1, 2],
        Rational[1, 12] (-9 + 5^Rational[1, 2]), 
       Rational[1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {
      Rational[1, 3] (Rational[1, 10] (85 - 5^Rational[1, 2]))^Rational[1, 2],
        0, Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {
      Rational[1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2], 
       Rational[1, 6] (-1 - 2 5^Rational[1, 2]), 
       Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {
      Rational[1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2], 
       Rational[1, 6] (1 + 2 5^Rational[1, 2]), 
       Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {
      Rational[-1, 6] (Rational[25, 2] + Rational[41, 2] 5^Rational[-1, 2])^
        Rational[1, 2], Rational[1, 12] (9 - 5^Rational[1, 2]), 
       Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {
      Rational[-1, 6] (Rational[25, 2] + Rational[41, 2] 5^Rational[-1, 2])^
        Rational[1, 2], Rational[1, 12] (-9 + 5^Rational[1, 2]), 
       Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2]}, {
      Rational[1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2], 
       Rational[1, 6] (-1 - 2 5^Rational[1, 2]), 
       Rational[1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {
      Rational[-1, 6] (Rational[1, 10] (85 - 5^Rational[1, 2]))^
        Rational[1, 2], Rational[1, 12] (-11 - 3 5^Rational[1, 2]), 
       Rational[1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {
      Rational[1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2], 
       Rational[1, 6] (1 + 2 5^Rational[1, 2]), 
       Rational[1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {
      Rational[-1, 6] (Rational[1, 10] (85 - 5^Rational[1, 2]))^
        Rational[1, 2], Rational[1, 12] (11 + 3 5^Rational[1, 2]), 
       Rational[1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {
      Rational[-1, 3] (Rational[25, 2] + Rational[41, 2] 5^Rational[-1, 2])^
        Rational[1, 2], 0, 
       Rational[1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {(
        Rational[25, 18] + Rational[41, 18] 5^Rational[-1, 2])^Rational[1, 2],
        0, Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {
      Rational[1, 6] (Rational[1, 10] (85 - 5^Rational[1, 2]))^Rational[1, 2],
        Rational[1, 12] (-11 - 3 5^Rational[1, 2]), 
       Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {
      Rational[1, 6] (Rational[1, 10] (85 - 5^Rational[1, 2]))^Rational[1, 2],
        Rational[1, 12] (11 + 3 5^Rational[1, 2]), 
       Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {
      Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2], 
       Rational[1, 6] (-1 - 2 5^Rational[1, 2]), 
       Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {
      Rational[-1, 6] (29 + 62 5^Rational[-1, 2])^Rational[1, 2], 
       Rational[1, 6] (1 + 2 5^Rational[1, 2]), 
       Rational[-1, 6] (13 - 22 5^Rational[-1, 2])^Rational[1, 2]}, {(
        Rational[5, 8] + Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], 
       Rational[1, 4] (-1 - 5^Rational[1, 2]), 
       Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^
        Rational[1, 2]}, {-(1 + 2 5^Rational[-1, 2])^Rational[1, 2], 0, 
       Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {(
        Rational[5, 8] + Rational[11, 8] 5^Rational[-1, 2])^Rational[1, 2], 
       Rational[1, 4] (1 + 5^Rational[1, 2]), 
       Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
      Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
       Rational[1, 4] (-3 - 5^Rational[1, 2]), 
       Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^Rational[1, 2]}, {
      Root[1 - 20 #^2 + 80 #^4& , 1, 0], 
       Rational[1, 4] (3 + 5^Rational[1, 2]), 
       Rational[-1, 2] (1 + 2 5^Rational[-1, 2])^
        Rational[1, 2]}}, {{-0.9589573737630087, 0, 1.2552914991369466`}, {
      1.3763819204711736`, 0, 0.6881909602355868}, {
      0, 0, 1.5388417685876268`}, {-1.1135163644116068`, -0.8090169943749475, 
      0.6881909602355868}, {-1.1135163644116068`, 0.8090169943749475, 
      0.6881909602355868}, {0, 0, -1.5388417685876268`}, {
      0.42532540417601994`, -1.3090169943749475`, 0.6881909602355868}, {
      0.42532540417601994`, 1.3090169943749475`, 
      0.6881909602355868}, {-0.296334125373938, -0.9120226591665965, 
      1.2552914991369466`}, {-0.296334125373938, 0.9120226591665965, 
      1.2552914991369466`}, {0.7758128122554423, 0.5636610018750174, 
      1.2552914991369466`}, {0.7758128122554423, -0.5636610018750174, 
      1.2552914991369466`}, {0.9589573737630086, 0, -1.2552914991369466`}, {
      0.296334125373938, -0.9120226591665965, -1.2552914991369466`}, {
      0.296334125373938, 
      0.9120226591665965, -1.2552914991369466`}, {-0.7758128122554423, 
      0.5636610018750174, -1.2552914991369466`}, {-0.7758128122554423, \
-0.5636610018750174, -1.2552914991369466`}, {
      1.2552914991369466`, -0.9120226591665965, 
      0.296334125373938}, {-0.4794786868815043, -1.475683661041614, 
      0.296334125373938}, {1.2552914991369466`, 0.9120226591665965, 
      0.296334125373938}, {-0.4794786868815043, 1.475683661041614, 
      0.296334125373938}, {-1.5516256245108846`, 0, 0.296334125373938}, {
      1.5516256245108846`, 0, -0.296334125373938}, {
      0.4794786868815043, -1.475683661041614, -0.296334125373938}, {
      0.4794786868815043, 
      1.475683661041614, -0.296334125373938}, {-1.2552914991369466`, \
-0.9120226591665965, -0.296334125373938}, {-1.2552914991369466`, 
      0.9120226591665965, -0.296334125373938}, {
      1.1135163644116066`, -0.8090169943749475, -0.6881909602355868}, \
{-1.3763819204711736`, 0, -0.6881909602355868}, {1.1135163644116066`, 
      0.8090169943749475, -0.6881909602355868}, {-0.42532540417601994`, \
-1.3090169943749475`, -0.6881909602355868}, {-0.42532540417601994`, 
      1.3090169943749475`, -0.6881909602355868}}], CompressedData["
1:eJxNkUkSgjAQRRllBoEEZJJ4D0/hETyA3n9nd9WzKotXkJ/u30Me7+/rEwVB
8BRiIRMKYRSsUAq5cAqtcBMWoROccEHvuRuJVf1KnCXH4V17tUby9Fx59Rby
Gvwv0KFl5A3EG3ISIRQm0P+UuqF3X6Kv9H7Sn/a80U9IXky8nnf6aUD7udNH
TV85sxj81P9A05iIuVfqbszqiOu528g/qKv1ZmioO1N752zQIvR/vPHqFuwh
ZS7LLlvPp2OfK3s8+G78J9yN+FjuBrx28g1+EbMPaBVajF7hOeGb4jfx7r23
y5a9dWiOvdfMVuKn7/ADnzANmw==
    "]], 
   {RGBColor[1, 0, 0], 
    Arrow3DBox[{{0, 0, 0}, {1.4868697724911502`, -4.70775123564895, 
      0.79138902121395}}]}, 
   Arrow3DBox[{{0, 0, 0}, {2.44942965466625, -4.3589327096024, 0}}], 
   Arrow3DBox[{{0, 0, 0}, {0.11154507124021501`, -4.7391894091854, 
     1.58985579250035}}], 
   Arrow3DBox[{{0, 0, 0}, {2.5716991119371, -4.283366029223, 
     0.197836137650245}}], 
   Arrow3DBox[{{0, 0, 0}, {0.23404224788195, -4.663481990494899, 
     1.7880603878325498`}}], 
   {RGBColor[0, 1, 0], 
    Arrow3DBox[{{0, 0, 0}, {0.9491939776303, -4.9090763686085, 0}}]}, 
   {RGBColor[1, 1, 0], 
    Arrow3DBox[{{0, 0, 0}, {1.99158501339965, -4.26484327893485, 
      1.686624125443}}]}, 
   {RGBColor[0, 0, 1], 
    Arrow3DBox[{{0, 0, 0}, {1.5419995828049498`, -4.6203370716522, 
      1.12903615130145}}]}},
  Axes->True,
  AxesLabel->{
    FormBox["x", TraditionalForm], 
    FormBox["y", TraditionalForm], 
    FormBox["z", TraditionalForm]},
  ImageSize->{818.104800823766, 1004.2985748826775`},
  ImageSizeRaw->Automatic,
  ViewPoint->{0.5107878208937127, -2.9709099186833914`, 1.537136967578137},
  ViewVertical->{-0.009168316414142102, -0.9101989648276549, \
-0.4140697844576392}]], "Output",
 CellChangeTimes->{{3.907454602231663*^9, 3.9074546272327785`*^9}, 
   3.907454671469287*^9, 3.9074554958480425`*^9, 3.9074556443756*^9, 
   3.9074556769191647`*^9, {3.9074557386176496`*^9, 3.907455751093794*^9}, 
   3.9074565018120165`*^9, 3.9074568312573323`*^9, 3.90745686972724*^9, 
   3.907456911213453*^9, 3.907456992102823*^9, {3.907457046200806*^9, 
   3.9074570737742367`*^9}, {3.9074571157857485`*^9, 3.9074572167490053`*^9}, 
   3.907538697560333*^9, 3.9075405110980096`*^9, 3.9075417303297834`*^9, 
   3.9075417788958073`*^9, 3.907541826091699*^9, 3.907541859631027*^9, 
   3.907542008039218*^9, {3.907542050541706*^9, 3.907542063651641*^9}, {
   3.9075425361190586`*^9, 3.9075425566699066`*^9}, 3.9075425918232827`*^9, 
   3.907542891145671*^9, 3.907543105635846*^9, 3.9075433558557415`*^9, 
   3.9075437705601363`*^9, 3.90754398358312*^9, 3.9075442453451242`*^9, {
   3.907544347880357*^9, 3.9075443537867303`*^9}, {3.907544664357026*^9, 
   3.907544685339801*^9}, {3.9075449063686714`*^9, 3.907544913180225*^9}, 
   3.907545014847829*^9, 3.907545452856409*^9, 3.90754562130427*^9, 
   3.907545905961091*^9, 3.907546178095789*^9, 3.907546408857529*^9, {
   3.90755047571369*^9, 3.907550552047144*^9}},
 CellLabel->"Out[890]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
f+ENQ7uv6gPvv1cDmPkstkEbZ/KvvZM4KEqQBhhbK7JKem40PANv6XF/PM4M
wrMOUyyPUQqv1xGenVhpyF24YjH9/+Q4TG8vze4/scR2b6VVEEmkxyFms3Zz
KvEM5XpUbjQM8aRUnqEj+T30y9dtkQjTbMrnXyqXoIUDbbgSKvkMszhJXCTO
qkjNyDvASRXMYxEO2HtT+Ffiz2CzHRuK0oPcDkuPnaDHfJmF74bydLb6IyXL
7xhd3ufIrE+EQ44QzYlkQ6fKsy/e9JdxoO3hCGy6EZgm5+ZF1zfdDDHo2Ml5
aieNq7r64lRIhnKklPB57nePFlucU789xk0hiVLHtZqJ7A/mT0wzkvSkWPF+
lvurj3NEmEVaQeZfcX6CJ+1Yz1lthOmWr2Ox7jB2NIQ/+d1S167co9RpkumQ
lSlJDwxo+WyqGYMq0qWOSDXutLm6BcZ2avpnwKR/NCKZ5eTlqqvEmvIuxdpa
86eQbt1cOTFTYk+n2KJ4pbptqmtnljZm8Ws/DNS2vo89SaXDdZZI2ISnanF3
qIQHHWOLEoas3qrwDGbKz/sDN6yo4PXtFJVevHx+yRNJuJ8lfM6BC6InSyN1
mmNaVaxUcujsA/+uHIm3RbGym3rA7uymLqyYVkoVDTimdXoHGbyBsGT1+O/f
ucX4NLpPf6CCN/VVa9/ZjOv8Tj2dJc5K5EwRoIk++Vdy6VaAYG9RgJDvEwHC
bPloLsBNhW597YuujtTbHRSLe+PhfDaMZsUSzyCzj1z1lTgU92yF9awLVz5f
fuZ7rW1rX9W65cUHtM47JETc5x6iHmuIUsi6luHFYCX6IE9nNyf66KssMdcl
ZqvLyVqM8O4/rucRa0errYIyWJn/rIDtOsjiXfSSFjoLmNNr5G1NsuT3wCQH
v6ZYHd6CXBJ9z1aBj4aYJmz6/3Dapw98Ihq3LOUBDlHKabZ14m7TyEXi0Wpt
7923VwTey8KmwRscJ3qdUs1LtN568ZGtm190YFSEcw7avXXPS46JivCtUtLq
54442aNeJ3s0qTnrq1sCfvtvT2Vm2h4sHm8GooI+3hnZezr+FI3nmvE93zSr
C57TWN79NjiNlasC3SBRsM4i7NOSOMnEbpXBO71OB9yLSmDMjxV6CrqftU29
LYlUC3WPSSVIHUq1KGy8I6pRWN+YBr91tUg3vrHxPfyJSSkAGophLSnG45SP
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\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"8c3f3d34-16aa-47af-a66e-8dba7d6bca86"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SVvector0", " ", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{"Arrow", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"5", "*", "0.6444904486331"}], ",", 
          RowBox[{"5", "*", "0.20847820715387"}], ",", 
          RowBox[{"5", "*", 
           RowBox[{"-", "0.73564182776852"}]}]}], "}"}]}], "}"}], "]"}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":="}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plane", " ", "=", " ", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", 
        RowBox[{"f", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"SVvector0", ",", " ", "plane", ",", " ", 
   RowBox[{"Axes", "->", "True"}], ",", " ", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"x", ",", " ", "y", ",", " ", "z"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9074572551778717`*^9, 3.9074572826371994`*^9}, {
  3.907457338608714*^9, 3.90745734018235*^9}, {3.907457412686855*^9, 
  3.907457521819968*^9}, {3.907457690153221*^9, 
  3.907457709331587*^9}},ExpressionUUID->"ff09414e-3b73-4ce3-94f0-\
a426a76b3a3d"],

Cell[BoxData[
 Graphics3DBox[{
   Arrow3DBox[{{0, 0, 0}, {3.2224522431655, 
     1.04239103576935, -3.6782091388426004`}}], {
    GraphicsComplex3DBox[CompressedData["
1:eJx1nHd8VcX29hMIpJNy0pNDKk2KNCkKnqFdQGnSuyBNVARp0kEB6cWAAmJo
ojQpIp3gGRAUVBARkI6AFOlBesvL3WueZ/+yX+/953z83s3O7GfPnlnrmTWT
+kbvpt3y+fj4FC7g45P/2e8Ly8P35+ama/yefJD1yidliyldr1BKZkYqebfH
JSY36FxUfbov9s96mUnkN56u35s/s4j6Otg1qtfxGPL3fWuGbd2RoXZY94kg
9/Hb16TvP+lqtXV9QfLxBdtmlshIV+ssftcLHhF44fc/m6cpH+t/f2WDfxbc
N3r22FS1QK73gKcXetqy8YYU9aXcX4G3TI0qF7ovWW2T9pD3KFpq3dDnC6ul
0n7yQSVrV748PUllyvOSTyjbfkvrWwnqO9GH/PMX+lf/sVk8/pv86xcn6xfW
x/K/oeuIibXX716dQZ3xW3DK/rsj/0ynzuDTprWvUjkinTqDx2VeGny9Rhp1
Bl84s//WL/umUmfwErN8nrT/IoU6g3epED+8+NJk6gw+sEo5n1mBhakz+Ljq
9UcXeDuJOoPPrtm5YP9fEqgz+LK6gyecLR1PncG3NPg45LVpsdQZ/OfXlk3z
3oymzuCnWm6PLNM0ijqDX2939JPPv42kztAvOfFK8uMyabwOfKn7/c7fvp5K
nfFbNiX/F29NT6HO4P3qFN5T68Nk6gw+9pVKDdaec1Nn3q9xo19T6iRRZ/Al
zbs3nfZVAnUG39xmxKEn/vHUGfynjp+2fqdnLHUGP95l1fFjP0VTZ/Crb/7Q
sX6pKOoM/rTXqTMbp0RSZ/Cwfne7Fr0RTp3Ba95M2l9iYSHqDP7GwwaHC3YN
tvu30emDVunRr7dPps7gme1fmr13m5v/Hnxx52aJ1ZKTqDN+13d/e97yUQnU
GfyHt0enxp+No87gR/rMXTyuVix1Bv97wLfF7i6Ops7gD4f8vLxrwSjqDB4y
6lzp33tEUmdw99hHa2rsCafO4B2iir3ZqUUh6gw+snCrd6vHBVNn8IXFx/VP
OO5PncF3ld845F6WH3UGv1Dt4qiDnXypM/T4flCfy7vaJlBn8EPDx/eqmB1H
ncEvfLjg5iJ3LO8Lfm/cpn4RI6OpM34DrfHHRZ3BE6xxJpI6g5eyxpNw6gw+
xBo3ClFn8M+t8SGIOnPcssYBf+oMftb63v2oM7hf55y44Ghf6gze6HDNl/ev
fuSBzuCfXF70ysQX7mCeIF/xpMCq8QOvcf7Acxf4bJu3VJto6gweO/9Qzblb
XNQZvPjia7sCkyKpM3jVZQXqDxoezr/HccL6LkKpM343Wf0/iDqDn7D6uT91
Bn9q9Wc/6gyeavVbH+oMPs7qn4880Bn8Z6sf3vZAZ/CUqWUKdal71QOdwVv1
Otlw1ZenqDP4Lw8GPmlzay11Bp98M7XxB6UOcV7H89XdGvTJjFbh1Bl87ag6
Zf36hlJn8IMTB1Q6UzGIOoPfnfllte/u2f0JPMF6X/nZDvBq1nvxoc749Vr6
P/RAZ/D8Q/+r820PdAbPtPS84oHO4FUs3U5QZ/CuD/+rzyLqDL7o1/1Tf5n4
hxc6g9fxLC1za/MlL3QGbx98O8jzxy3oSZ54b8bTMa89oM54jsjNqw/eXmHP
04ynvj997Ld381Nn8NZ7w86sKudDncHvrBq5L/bvB/yewatZ9/mH/Q/cd/V/
r/+beoEnWPwodcbvgP7lP/yk7MVq0Bk82/q7R73QGfx3i//thc7gRaQ9XugM
fkbaT53BG8nzaugM/pzogziVPEj0ZPyK9pYS/RkngfeV98V5HbyPvF/OQ+B3
pT9QZ8YF96z+w3EB/PQUq7+xH4N3lf5J3cGvWePGbV6H36XS/6kzeDn5XjR0
Bg+T70tDZ95fvkcNncH3yPdLncG/ku+dOoPXkvGBOqNdv8t4Qp3B2963xh/G
W+wvMl4xPgC/bel2lfMZv2MZD6kzeG8ZP6kzeLSMt+z34LdkfOZ7Av9VxnPe
F78rZfynzuATZb6gzuAVZX6hzuDpMh9RZ/AImb+oM/WR+Y464++PlfmReQL4
cJlPqTN4ZZl/qTP4g07WfM14AvywzO+c/zheSjzA8Rp8usQP1Bn8XYk3qDN4
UYlPqDN4lMQz/Hv4zS/xD3UGvyXxEnUGPyPxFXUG3yfxGHUG90r8Rp3xd05L
vMc8DTxb4kM7bzF8jsSTjIPB35f4kzqDN5N4lTqDx0t8S53B/SUeps7gdyV+
ps7g5yXeps7gv0t8Tp3Bt0s8z3bg9xuJ/6kz+HzJF6gz+FTJL6gz+HDJR6gz
7tdW8hfqDF5Z8h3qDB4k+ZGdzxh+X/Ip6gx+UfIv6gx+WPI16gy+S/I76gy+
VvJB6gy+UPJH6gw+XfJN6gw+UvJT6gz+ruSzbB9+y0j+S505rki+TJ3B3ZJf
U2f8uyuSj1Nn8GOSv1Nn8D2S71Nn8A3iD1BnjmfiJ1Bn8JniP1Bn8NHiV1Bn
8D7ib1Bn8NfFD6HO4MXEP6HO4PPFb6HO4DHiz1Bn8Kni57Dd+PUT/4c6gw8T
v4g6M18Uf0k7/Do1V/wo7fDr1Hjxr7TDr1Pvi9+lHX6d6i7+mHb4daqF+Gna
4depNPHf7PjS8Dni12mHX6fCxd/TDr9OGT9QO/w6lZvf8g+1w69TA8Vv1A6/
Tl0Xf1I7/Dpl/Ew+D36N/6mHDA67Xy8zjb/v1dq4YOL4IszHwUvVzMktc7OI
Mv+NX71z91d/f5Pfbh94g5/Ll+xZMVo57q/M9dpxf2Wu1477K9Mecvyd1Edd
rtzcXZTtw/0MV47rdUYVn5EjxsQpx/XKcO1ovzLPq49EhHfNqJ/O3yXzlt+Z
1r6oMv+NX735g/hD/U7EKMf1ynDtuF6Z+7Dd+HcF59Ut8sZ0+/70b6v+kHws
KY73R3sN53/j35n7aMf1esRDn8TvHxdVjuv1kw9PD/i1v+0L4z6Ga0d7lLmP
vj6z0OHckbavuz5kfqGeD9NV49y4Tbm5nK90g6dNnxzaVYQc11+b+qBHYJ10
teNg1M7cXD6HHjNqZcuB4UXIcX2RiObbl03De2V8p7fmC1gT0y6DHNe3n7Eq
4ZVjqaqJ9XcZd+tbY94I3PhlOjmunxEd2P/ys++nknUd8yFd0n/bG61uppHT
v53VZe/E3imqssX/YT76xoTY7HsvppHT9644rGHL/vCfNX1+M26oCnI9fZrf
pvzybpX9Kbwe9xlg/GpcD36u2oW1f8xLUhWlnXyfgeHFdh9JSCHH9c1qzO0W
VzFRNRIdeP2ojPy1bv1UmJw+XJ0mcW32xJv7uHj9jeKb7pTv5CbH9eVeKfDz
nI5xaru8R17fsXSvpf3uJJLTz2+0Zfixf2LM33Xz+n3l0tqtm5hAjuvDm/Uu
mzghWpl+yOurV/oj9E5yPDmuH9kq41y7wlHgnDdaZdUZ/PngVPZP8KnJCw5U
25nCfgj+w8KHJU8WSmF/A39Ud3nQo7WF2a/A32rw+raX6rnZf8CPNYnqM+xk
IvsJeP0We9K29U3gewffZPxzvHfwYh0rjH85K5bvF3zWG5deHFk+hu8RvGCP
rGveH6P4vsD7v910gU8HF98L+F+9/ZvVuBVB/cGb9c8u8OG4cOoMPibnbJ+x
VQtRZ8zDN9od+XF+jps6g3fsNGXInx8lUWfwfV1rlk5NSqTO4NV73jvd+Zt4
6kx/vdfXmYv+E0edwZP6dq5z7tk8Cp3BJw2MuZ/+XjR1dvrn0Bm858hRHb6c
G0md6c+PfiH8QtkI6gw+LfzQ2IaTw6gzeK94z5V9G0KoM/iracuaNDkTSJ3B
nyvp2vBbsD91Bg+oODyxWSU/6oy4ptzwIlkFb8ZRZ/BFHxxrXHdsLHUGD/9o
Wr7xCTHUGXyUFY9FUWfwG9a47aLO4B2t8TaCOoPvs8bJcOoMPtj459AZvLU1
LgVTZ8Zr1ngSQJ3Bo6xxoAB1Br9lxef5qDP4wj0f3X0pO9cDncFfP952+8sR
Dz3QmesC18pMrtH9NjjjxP7z+vbtdd1FncHPLSpWZNXoSOoM3nTJiT+ux0VQ
Z/DRVh4XRp3B37C+ixDqDK6s/h9IncGTrX5ekDqDPzb+OXQGP271W1/qDN7X
6p+PPdAZvKzVD+95oDP4VSuvz/FAZz5v1sBZq96+SJ3B535Qve2bJY9QZ/BB
40+0rnJvFnVG3P3OyJHTlh4Npc7gr47/+3YJv2DqDF7842ZtV5QJoM7g/pb/
U4A6g5+33lc+6gw+znovuR7oDF7b0v+BBzqD+xr/HDqDD7X0vOqBzuC3Ld3O
UGfwbEuf3dQZvJPlB+7yQmfw+a1TvktY+KcXOoOnvzCoePS9K17oDH444M09
4776B5x5zM3t8S8OPJyfOoPv+2n0/Hs+vtQZvO2S44G3Wj72QGfwGMs3vuuB
zvSxrfvkeKAzeKp1/QXqDF7B4oepM3hWl64Xflpythp0Br+0ybreC53BH1n8
ghc6g2tpjxc6g/tJ+6kzeD15XuoMvkv0QTxMflH0ZJyMvPCi6O+BzuD15H15
oDP4Tnm/1Bn8H+kP1Bm8hPQfL3QG3y/9zQudwVtJ//RCZ/Abxj+HzuDlpf9T
Z/CB8r1QZ/CT8n1p6Az+dI71PWroDJ4i36+GzuA15HunzvT/ZXygzsizQ8dY
44kXOoM3lvHHC53BS8l45YXO4EdlfPNCZ3C3jIfUGfx1GT+pM/gBGW81dKY/
b/xz6Ey/XcZzDZ3BK8n4r6EzeCuZL6gz+BCZX6gzeCOZj6gz+CmZv6gz1wVk
vqPO8C38ZX6kzuCvynxKncGnyPxLncEvyXytoTN4kMzvGjqDl5J4QENn8IYS
P1Bn8N7GP4fO4LslPqHO4G0knqHO4Jcl/qHO4EMlXqLO4CESX1Fn8M8lHqPO
4KUlfqPO8IF8Jd7T0Bk8TeJDDZ3B60g8qaEzeHeJP6kz+DiJV6kz+CGJb6kz
eDeJh6mz0z+Hzry/xNvUGTxO4nPqDL5M4nnqDF5V4n/qDP6T5AvUGbyt5BfU
GfyK5CPUGb7aMMlfqDN4Y8l3qDP4acmPqDN4H8mnqDO4r+Rf1Bn8Y8nXqDN4
uuR31Jnr58Y/h87gdSR/pM7ghyTfpM7g3SU/pc7g9ySfpc7gOyX/pc7gkyVf
ps7gLSS/ps70eyUfp87goZLXU2fwLPEHqDN4GfEZqDPr6cSvoM7gjcX3oM7g
Z8Q/oc7gfY1/Dp3B84ufQ53p84svRJ25ziD+EnUGbyc+FXUGTxe/izpz3UF8
M+rMugnx36gz/Drjh2iHL6eMr6Id/psy/ox2+GzK+Dza4acp4xdph2+mAsR3
0g5/TBlfizo7/XOHD6aMn6YdvpZ6Tnw57fCvlPH3tMOnUsYn1A4/Shm/UTt8
J2V8S+qJ34UvvrLww1cyGCcnnSk0udfxVP395cZTqp23/cxXS4fVPF4pTV/6
rMXguyPTmY/Ahw5+tV23NQm2D7l0V9iqDdfSdJlHnV57a73tN/5hfNqmK7pX
z2hi+4oFOoYnZC5O1wPavVPi1GXEnTq74v/wFdH+rbOrHQnyuJn3of2+D+qu
GdE/ifk12l+vTbPxt5YlMr9G+6dt7tip++kE5tdo/6H4t6oci7L9OrTfPWRA
eKNX6MvpW93jGmTUd+uaP98M3rDH9t/w223o3Xu9u6bavtCs+IzjGwrrCSUf
nyuRa/tvgWUTpm/olay/Pu67/9ycFOpZoWvo03qRKfrXSf7ZWRVTqOcba0LX
beiVoi++n9Bk9bxk6jn9cehbGXtSdKkjRYqnHyxMPb3GP+zn8F1zTPufbJ6w
8r3qcdTTPLeunfDJ2PN9Y21fyLR/0pAFHdosjaGeQab9vx1b8cLek9HUs6Jp
f/xLG0NruKKpJ9rfae6O8+vq0c9UaP+Xj/ZuKz7CRZ0DFruu1suM1bs2lrl2
4OPC1LlbtajWGfXjdGjci7v+86Pb9oXMb/NBdbK2PE6izsm9osse3xCvPzvS
ZECZ8knUeViBmM839ErQf1Zp33BRj0TqfCwrJiAzI1GXmNOjSExWAnWuXCm2
f6/jibr3g75PJhyIp84zjX+43uFz+pv2e44f/vDISy7q3NW0f+xLZ9s2eC/S
9oVM+/fOvVZefxVBnVNM+6Mf3w+qeCKcOg837W/X3u/ckohw6oz21x6cPLDy
VPqZCu3fX7VS0eQHIdS5sPUdRejAo0N3VJ0eT52HWt9LpG5cddxnK3fFsX2y
ruLSn87J7Jv6KFblHW9dZp9CLHXOrBlR7fiGKJ3RdllaYPcY6nzzWMTSDb2i
9dtb1j0cNjeaOjfsFxmVmRGj1yboAzf3R1Hn5cY/vO/wOd2m/fmtcSCEOg8x
7ZfvPYg6o/0p1ncdSJ0rmfavtNZt/anzDNP+ao8W9XGnFKTOaP+erZtTCkyi
n6nQ/hbD9u+/eicfde5hvfcA/erD3bMWTI2izmnW+w3UmW0P9o7a6aLOx633
GKyPbDldd/yDSIdvH2Lq5yOpM35l/ImgzsHWdxqmV1rjTDh17mJ9j+H6kjWe
hFFnbfzDAQ6fs7tp/zir3+ajzimm/dI/fagz2l/X6odP6QvNMu3vYtV7PKL/
1tS0f+TQIZUOV71P/y3EtD/r8ZJPvwy7Q//tDdP+tcMP3e1/PofzRIbVngfe
+MqljhVKCKPOc6y/+9i79F7NiXfH2N+b3D/XW3FTmxdP3QimzqKDr95u1QUF
UWf5LvKZ7yKAOuNX+r8/dc6x+kkB/Y7VzwtQ5xXGP3zg8DlTTftFz5v03z41
7RfdrtB/Q/tFn/PUeYdp/xqrTuwkdR5u2p+aL7vMD3v3U+fKpv0VEnZvKzRz
DXW+adpf5PLq+cP9t9N/22+1/wdv1uAfxpyIKUCdsy1+2FvyxZMVd36Qnzrv
stpzxrvp4T9/rbjqS51XWddf8P7Hqif0oc6zree9at7XE09e3z7Hu9N6Lw/p
v+H3tKX/PfpvXxv/UNZHbJ9zk2l/pFUXuoe+0BrTfqnXPUpfaKdpf4sH179L
f3KW/tu3pv3x1vV/03+bb9p/5naVly98eYP+207TfrnPLfqclUz7qw/a3rF5
sbvUuaxpb03h9N+2yn08HeQ+9N+myd/13JK/S//tK2mnp7i0k/5btjyXp6M8
lyev/3bYU0Z0oM6zRDdPZdHN4XPq7JIdir9Ze8oO+pz4PS7vxZs378jxaHmP
1Hm6af8iee/UeaFpf03pJ4yH15v2r5N+xXj4M9P+otIPmXcsNO2fK/2W8fE1
6efqNenn1Lm8ae/ceOu7oC80WL4j5SvfkTdvfuerpst3R/8tQL5TT6Z8p968
efRjT2v5rtmP3TIOeCJlHKDPudT4h3cdPud10/43ZZxh3oHfEzIuMe9A+xvK
OObwhXzVNhn3qLOfaX9ZGSep83TTfnlf9DNVYdP+GBmHqXNnGbfVShm36b+J
PmFqhozz1JntlXmBOkvcFaLayzxCnY/KvKOUzDvUWdoTqERPH+Z3XWReU2Nk
XmN+t8z4h/ccPqeZd9QFmTepc6Bpv8Tz4Ww3fs287PArQkydXiR1/sO0/7DM
+9TZbdo/TeIE6tzVtL++xBXUuYHEIaq5xCHMT25I3KJ+lLjF9oUkzlFVJc5h
PIf2Lpe4iHGG5EculSRxFOc/E3cpE3dRZ8nXIlTufStOo85e4x/2c/icJo5S
30gcSJ1N3KVM3Gj7Qqb9Js5ku/Er/T+WOh827f9E4ljqPNi0X74L+pnKxJnK
xMnUuZLE1crE1dRZ+mGiqiFxOHU2eYdqI3G7duQpyiVxPnU2/06ZvIA6mzxC
mTyCOpu8Q70seQd1NvGzuu/wOU1eoExeQ51NHqGKSx5EndF+kzdR58Km/XMk
z6LO+H1N8jLqjPYHSx5HndF+k/dRZ5MnKpMnUmeTVyqTV1Jnk0erWMlDtSPv
ViZvpc4mz1Umz6XOaG8tyYups8mjlcmjqbPJB9V6h8+J9ps8nTqj/TKeJFNn
tN/4ANQ5wLR/hfgG1HmFaf948RnYbvwaX4I6o/3Gx6DO/uLPqO7HRl3aPjKO
OqOeTvKmeOq8TPwT9Yf4J9rhF5lxIIE6NxB/RtUXf4Y6y/eVqvKJn0Od0V7j
/zjGjVQzbtg+J9o/UPwl6oz2NxM/ijqj/c+Lf6UdfpEyfhd1Nv6Suij+GHU2
fpQyfppTT128UcOIpJJFmSfCB+siOpPfNP+uzbdDAqZ9Z9d9XTX/f1PhfI+M
a8Tf0477K/N3yeETRg27/8ULQ4s6fVdtuL1/G77XlqET5pRFvaL9fD033ah7
NjeDdVTgQ7b5/9yks71vFtxPzwgJyLT3xYNP3pHcyLvDrqsAj961YtrAf+x9
8eBZP1b+rXQG6gz/ygZvOHNckZ+W2fviwTvOmb+0SrC9Xgjee97GkkveSeQ6
FvioL35dFb3P3hfP9ZalF8uNed5eVwD/YmXuulvT7fpy8PVrY6t0vhVFPfE9
jRy896MLuXb9H/jdgTXqPP9rGvVkfDSsze6ssnYdFfj0EecDW3ROoZ6MW/Od
+zQuI5l6gtfyfxQ/bqxdbwHePMSVdedCIvUE7x5RMqVrvQTqCf5+TK0vDiyz
12XBJyS2K1ojOJZ6gn+W0m/Z6neiqSf4iiKTShXeZ6/fMI987ovVk5+PpJ7g
+57fWv7R9HD2Y17f86u3f//r/9R9mvEprs/LAT3mJdv7tQ0f/cKMmsPmpdj7
sg1/bkDLSYf+Tx0b+EtD3i1Uu7O9nxm8wciPPl67I8Hel214hzHzolIz4u19
2Ya/O2HDrGljY6kz+AdT9yU8vRBt78s2/OMZF7LeqRdl78s2/IvZT1OOL4u0
92WjnigrZnH9YHs/D/jEOh0a9TlayN6XbfjKxlOaN/w8mDqDH2izre1zrwdQ
Z/CcLtc6+acVcJxD4tLlr53J51s9kTqDp1zaMzLzuH2uAXitWw/G9p4X7zif
xKWb34sIPJUb6zifxKV7WPsC7P3P4HKeSZTjfBKXnmDtU7DrY8DlfBJ7nyS4
nEMS5jif5Nk8Zu2/CHGcT+Iy54oEOs4neZb/eRbXWhxj7/8BP1P/YP0PjuZz
nE/yLB5ZGrAgu0ou143A62e/+fXA7+6zThrz56tvjX3y2f85DwX8xW69hpQa
Yte/gnfonTUqsHo0dQbv3X99/kHz7LpD8FHWuGTvPwf/2BpnwqkzeB1rPLHr
k8DftMaNIOoMPtEaH/ypM/hKaxyw6xjA91vfuw91Bv+r3+H31ix5yPVj8BLj
K414q/RtrneCn6lSOrp+9yvUGfz7HcfaDTl3gjojHul+sfj9ikPsc0vAm58N
H/BDXBR1Bn//qhr6xfFw6gwefu6bx+lDClFn8ArW9xJMncFbWv3fnzqDD7b6
uR91Bp9r9Wdf6gw+zOq3j1mXQ//M6p/2PkzwUKsf3mDdA+u+9+/eVLb2WeoM
/tFf6f+Z8fIu6gxeY/Dxlp/P2Md1U/D96+8+7jvnL+4rQHz3dPfs81nlQqgz
+Inv3jyt3w2jzuCpv+++MuR2AHUGr33yfk6rjQWoM3gP6z3mo87gLuu9PGW9
I3hrS/97rM8Dz7J0zmE9GfguS88L1Bl8oaXbAeoMXsrS5zvWo/D+/0nsm/vD
n6yfAI8o3K7NpK3XuN4Pvn1IwwXBre9QZ/APul+b8dqBR9685wno7HLmPAFw
xMs/yX24fwPXh5lzCcBx/Vi5vyfvuQQ6u7k5lwAc16dI+z15zyvQ2dfNeQXg
rFsXHRznGGhzHoJdb43rN4uejvMNdPZtOX+AHNePkPfizXvugc5+IucYsD/g
+m/l/bK+E9fXb7Lm7cqtD1QDx/WfSD9hnSKuP2rOSQDH9Y2lvznOT9DmPIS/
yXF9kPRbx7kKOrukOVcBnH6V9H/WReH6S+a8BXBcr+Q7Yn0Prn/NnMMAzvU3
+R4d5zPo7NLmfAZwXP9QvnfHuQ06OzTvuQ28/qiMA9y/hHxutIwz7Lfgh2Sc
Yf8EbyLjFfdRgI+X8Y11/+BPlljjIevUwbfI+Mn+A95Pxlv2E/BZMj6znhW8
v4znrL8EbyrjP+sFwZ+X+YLvETxU5he+F/ABMh9Rf/AuMq9RZ/BmMq9RZ+TH
v8m8yX1i4Jtk3uT+H/B0mX+pM/hJma+pM/gvMr9znwDzcokHWNcO/pHEDxo6
g3eVeIM6g9eQ+IQ6g0+TeIY6g4+Q+Ic6g/eSeIk6g7eT+Io6g78icRp1Bjdx
mqM/u5SvxIHevP3ZpepKHOjN259d6pTEkzpvf3aZ/mmfDwU+W+JVnbc/u9RA
iW913v7sUk0lHtZ5+/Oz+0j87OjPLjVO4m1Hf3apARKfO/qzS3WVeN7Rn12q
mcT/jv7sUjUlX3D0Z5f5LhId/dmlTN5BneHf/CJ5Df0O8OuS13CfG/gyyY+o
M/hYyaeoM/g3kn9RZ9aJS75GncGnSX5HnblOK/kgdQZ/R/JH6gzeTvJN6gxe
X/JT6gxeRfJZ6gxeTPJf6gweLXk0dQY3ebRj3HCrvZKn67zjhluZPF3nHTfc
aqvk+zrvuOE244C9vwt8tvgJjnHDrcaJ/+AYN9xqoPgVjnHDbcaNBMe44VbN
xA9xjBtuM564HeOGW5UVv8UxbriV8Wcc44Zb+Yuf4xg33Gb8SXWMG25lfCHt
8OXUOvGXtMN/U8aP0g7/TU0X/0o7/Dc1Uvwu7fDf1Lvij2mH/6Y6iJ9GPcFf
Ef9NO/w3Zfw67fDfVJT4e9rhvynjB2qH/6byi3+oHf6bMn6jdvhvKkd8S+oJ
bnxL1vPBrytR/fDZqkPTFerPwNd63sjIWZGmUC8F/lLN692WnkhVqO8B31l7
yJLXQ1MV6lG4Lle34N8xL6eoI6b+AHz5jIwWn58srK6adVzwvVnN2w1ekKiw
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
     "], {{
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
        EdgeForm[None], Specularity[
         GrayLevel[1], 3], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[{Polygon3DBox[CompressedData["
1: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
oG3Zv8MUT4J1SD3GT2d8J8Zf1PODd4Zf0h7Tuoaf1/2Cd4RfgIfwvWdn6yrl
u3OytdcDcOts7fsS3D27fhgB98yuc84P1rad+N4Owdqwq64Brgu3gU+D68Ct
FcP5bJvs2uZt6Whdh2I03Da7JnkYbpddF52E347rfIo5jzB+XrZGnIw9y9jU
Mi/XZs7TylWMP1PmzTN1/xgfrjgSrLs7a03iV3CureF78auwr+D78Gdla0r9
9rej9duQUpMo13zL+PPZ2kh1pT77U+Ha7d4yTqq+u6+Mw1Pgh7K1kXTpXWW+
qMN1rdS+ja7XhpTxUzXd/WU8V933QJlTpsIPZ+utafAj2bpqJvxktm6YAT+W
rfOkme8u84W08eAyB30hnZut/3Sf7uB4Ltd/Z6mjpBu/YmxYtpaaDj+arQu/
hIdmay9pzDOS67ubg3PXnYX1/INl7pP+qcXvfBJuELx3m0qvwlvBB8FNg2Ph
4dKBwfGgCZz47IzsNfSXdFN2jPhbeio7RrwH10nWn42C44Ti5z/SZdl5ZRb8
dLbGfRfeMVmjqs7bptSfzco4r9j1H2NTsmOfNFtNrn+o8lZwTmgpbRC8Zo+B
m8M7wcfCgfnTsmNQxE/PXvebpBmzc9u/8GfZMWsO/Fy2nu4SXLf14jydguuq
HvBy5ryerVEmBudtach3g/O2tOXbwVpGmnAZ88dk1wxL4Feza+ml8GvZNfbw
4Jr7NeYvZnx0dp2vGH9ucpz/QXo2Wzd8D7+ZrXvuC9bpjzHn0eCa42n4seA1
ofXwUnB9/yo8IrgPIL03NlhPSZeOL3Wgctm4YG0o7SoteV3y/h0V3FeQbn81
uPcgrT46uPcgDT8muN8g/dkt+LnqmV4W3DO4qvA6uSO7HukYXONexvhExgdk
18AT4P7ZNXPn4Hq6J3MuDq6Duxeu/Qdl6zfVsHdm6/yuwXXt5czpHqzdroYv
D9bXfeD2wfV6l8L348Lke/JacF9Edcq9wbXdo/DX/P+p7PpNevzm5P5Vr2Cd
fi3cM1g/XgP3CNaJvQuv89tLfah4Oza6RyEd3jP5uTeC/8WuiX4Ovcrr+SI4
1n4L/4mt0bWUz6VP8n2eWcZYxY1ZwflkPvxlcAz+Dv4VW1s4NtZlfLX0VuHa
+YPo2LuxnLOk8G+8qdQ2Ovft5RpQP+cLjusW7v/MiM6DM4Lz3hxdI+Ods/tf
6gV9Gl27rSl/w4/Y7OB8uBCeHhyTZsMry3k/KLYH54rFimPB16R7vgr7GVta
WOMsKWPFb+VndY71hXsHv+g3cw3jsmunT4Prmy8Y/yy4ZvoSnhYcV74pz/Fj
eQ0fB9c90zWmHJRdd80JzuGLGP8mOG8vgD8JrplmwNKP35YxcEN5b///Oehe
ryiv8Y/CPQ7pzO+i9bn2+BXJtd5vqh353k3BceBKbHJ5Pdcn51zp7bnRel6a
fF4Zw6XZforuL0n7rYjuZSkPNkuu66Ubl5axdCP8Ed9VtcxfRyT3HJSnjkzu
OSgHNU/uOeje3lLma+XEw5L7A8qJhyf3FvS8fi+f2Stl3FTMVF0wn+PmZZy8
NLmeXVM+S61zxdvLkuvE1eVzrV5Y16vpdGZ5PzeU61bfta7Y3NbZHGMvVqws
HHs7JtdcirEXJdeMdzCxreIoXDm416C1Kv0zLrp/24z7UYG8MyBa57dL7v+o
3q9WwfW8NP/5yTWpNP95yTWsdPWyMjf9Xl6frm2E4n10r0z3/NrsHKzc+j3+
YMaPCH4OxxXOsz9E1ybqgy2I1s/qac+O3svqLS+K1tKKu1sn1z7ncZ79OL4Y
rqTcld0TVC1cLzmuqhaum5zj1C/aITkmq87dMzmWXhfcn72lcG45PVmfqCbd
R+uycM27X3KcVz2+e3IO1Rruld27V7ztUGoVaZyjks+pvLwqun5U3l8dXbNI
651YrlXl8Q3RtYmakf2y873y+MromlR5/7fyvkm3/B5dv+wDP5Hdt9L7goX4
hoX1ya/wEYX7wP/ApxTuIf8dXQurJ7wpuhZWXm6brD/Va/0vui5Tn/nf6Npn
WfmsFaNUj++fnIPUl2iUnCOewP8szaQ4pWvQ3itZWlTxZ2rwe5NZ8KXwYdH3
uRbnGZjdN28YHBu0Zv4q3DdRz0R1z8zo2mddeT3LypiovbS8jD2ryz01Whqh
jLdry/ikfDElWFsr9qr/XyN5LW3L+EjGqxWudSZF1zvqgRyQnPvUP6mZXI+o
r7Vdcj2iPnxKrm3VP9lJ+79wr7tycp2u3t0uyble6+6eXPYp8U2Sc656NYfC
1xXugW+V3KNQ/7yK9mHh3lptuFvhPs+2yXlfPfDqyT0H9eqrJfci1MOvmtyj
UI+9YnLdpP5PreSaRe8OcnJtq/5/heR6SnXx8mj9+ZTuU3bfWT2NP6P7/49w
3BV+qnxGX5b3TcFgTnQtqZ5zaz7zSOF+8mnJMUq92eOTtb3WwKLsNaHabX10
n79Ddq36cvQemZrdR1C/+gTm3VG459YdHg03gF/I7imrz9YjWSuqN/ILYycX
7hX8HP3OQjX41Oh3dqpbByXnR/Xz2yRrUdV6dyfnVtW8dyXnXNWME6LfZykW
zcqOTdJ7W5bPSDqwEnZJ4T7AtOh3fOoFrYt+f6H+/DnJ2uwUeHvi8HPRvQLV
6qrT1Rf6C25XuJZ/N/qdmt6Rdeb4xcJ9g4nR75XeCo7x6uu+GKzFdH/0juyC
5OclnTYqu7+p92Xtk/W2+k4x+R2W9sL70XtQcV77UXFA7+y6JPfZ9M6uU3IP
SrXOmlLDaA9qr2nf6f1dt2T9rxr/m+gaTc9V+077V32wjdHvjPRer2tyL0h5
7Nzsd5P6ftXXugb1YaYzf//Cee2N7F6q6voByX1v1d1vRL83Ue9icLKeUR/g
neh3pupZnZn8LlK9iK+j60TVd8dhDxfusXwY/b5PdXHL5B6melytkt8n6tmN
z+4dfB38DOcV7o+dnNxblvY+NrlvrFr4mOS+qNbtn9l7SbXbKcl9ZvUETk3u
P6vHcmdyv129u7OxFwr34s5Kfr+pOrpFcu9U/Z/J0e9k9Q7ik+h3zerJvBn9
nkj9pa+ie6rSn4vLGKs+2EnJvXH1mj6Pfn+tvtaU6PfaykEbsjWHdPKEbC2u
uPZrdpxT3Pg4+p21elMfRb/LVr9rVnTN/n9+8OlM
             "]], Polygon3DBox[CompressedData["
1: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
D7ske0M8H/X40OSsmIwTPdw/Wf/wLHhJPCXjM4L1tnOy3uFx0LuuyfqCJ6X+
9kjWYzw2fqBXst6SkVKPuyfrM56f+n14sl6SkVL/eybrMZkw/uGwZP0mE6b+
Vkmup+z5oecHJuvX4uwPuiXrLT0O9X6r5HrJnjj+ZksdxxbeY6beV02en+x5
4Y+2Tq7H7Gnjf6on1+Mjsz4clKyfeG78wRbJ9Z88ivq3eXK9Zc8bf3Nwst7j
Kal31ZL9AXvg1Ot/ovMD9uTwujsl11s8L70SPRO93tHBe0Pb6RheeI+Ifrp7
fs70Yvix3sn6ReZP/emUrM94VPS9FZpY2PPSS9JT0msOzfVtt2S/gcelfrRP
nm/0BPRLd0b3Qy1yPWidXK/pGemP7oruh9jTxF+2TP7+9IzUmw7JeooHp37u
nVxPyGiojx3FjxTuAdDbPZP9KT0EerxH8vedlfWxTXK9IgOiHu0lnl+4p6be
7Zus1/Qs9F70YMz/S7K/2iVZT+mh2ftqkFw72QOjltZP9sPUVPxB2+T6T8aE
//o3Oh9iT5laXC85j6cm4x/2Sc6iyHzoZ++OrvX8Px7/A2a5t0M=
             "]], Polygon3DBox[CompressedData["
1:eJwt13fcFOURAODj7gBpNsCGKNJUUKQjXXqkKggkgJjQNFRDNVIsFJUuPYpg
VMAYFA1FEQQiVWlGqtISVFRAULEj4DPZ74/5vTPPzn53t2V2vxu6DWjbP51K
pd4TuWNV/D2TSn2TK5W6WFzDeqirZVOpUba9xlaw9+Uv8G/Vl4pibCt7kZ1R
Xy6uZdvYS+w7dRFRnH3ClrD81vKsKrtdfZPPuIs9yp5kndlhMYjNYM+x7uqj
YgR7ji1gE+xXkt0grpc3sa2L/IgYLJ+pb56+8baViB5xnbyxbU9Zr1MXj5A3
YtvFAvX39rtCXGffT9nrrID1FlaNfSF/g11qrcRqsg3+xs+sILuVVRDvyP/G
PpNfJgrpO6evkhhi2yw2W6ySz9b3SfSIAvrWx+9kx9WpOIaWD9lC9nOcH1GK
rWHPsGPqwnHuWDN1OZ9xn21T4jPYu/K5/Ev1eXXh+M5sHjvB0qIo281eZmfj
PIoybCObz06qs3Fs2Ax/vyqrIm6Ut9FzNK4TdT5rOX1V9D1r283i9+xJ9oTo
pud/Ynh8J/VL+pqqy+v7I5vK5rA/sf+Kh9mz7EW2Wj6Hfaq+RBRkm9jz7Ct1
HnElW+Vvfc1OqfOJ/KKT+pAYqH+6eq6+SfrKsjJxHcmbxfe0XqO+Wlwrb8iK
yK+U15X3s+9g+xZlV7F6rD8bwi5ml7PqrBfrz6aoy/GbRUl5c9sKy6+Q15H3
1TdIXyF2GavGerJ+bJy6iKjFerM/xz2mryirzfqoB+orGNdjnBPWg/Vl+dkl
rArrzvqwJ9TX8mIR8ga2XRG/VV5fPkDfUH0F2MWsMuvGeseciOubVWBdWU92
CSvMarD72QA2TV2R3xbHVd7KttHWfKK8vHOcizhPtl/D7mAPqofZNxv3GruV
3ct6sEzMDHZL3N+sO+vAKrAYYvPYQvYw+1xMY0vZ6jgfhltDfdPZMrZcPB2/
Qd+torS8ZRzbuP/E4zHL9Cy2b5+4zsTomGXsVTY9jgmrJMrKW9t2j/yg6Cef
rG+Wvom2lWalRAl5U9v+ErNAjJf/U99SfW3VH4s+bCKbwe5WfyR6swlsOmun
PiD6sklsZpwPv62mvz0m5lYcA3EifmecE2tVdR197eNc6BsQ9zFbxFrH72cP
xP3E5rMFcYzF/elkLsV8GhizRUxgi9XL9HVUV9T3YNx37GXWNWYBeyjmB1vC
psbfi/s6joO8hW2v5sy/oenk+8b3vtf2ymwYW6R+zb55WCF2G7uP9WJ9WS02
jq2I+RrHL5vMwJh7r8RxTSfX3qZMcl6/zibX4ahsXFyufdbSvi3Ed/JcrLi1
lfoeLV/Jf9VfxNqYtWRn5bnjfMa5Zl3YL/KVcT9bG8XfSyXPkzWZZF58nk2e
Lafk5+NetzbV11rfafmFmCfWZqwNOyk/F/e1tQlrlUpm0DuZ5B49lk3m0Tl5
HnkZa/s4dvq+l6fjeWZtzdqzX+VZVsrajnVm6+Sn4x6Je09cz47HvRIzy1qF
1WZp9dsxr1hz1o59Jv8lZoK1HmvCfpK/Gde3tQG7k+2Vf88uqG8T1dkA3+M7
dj7nufj/56N6Yya5Jk5nk3uxldgverJxeqbY9wd5xvbrrW1YB3ZMfjZmm7U+
a8p+lr8VM9zakDVnZ+I6iRljrc0asx3yM+xH9Y3xHeP45TyjOtr2EPur+FL+
r5jH1srqWvqaqHeLruyReJalklmwOZPMuG+yyVzomfPsOR3HON4jciX3wYZM
MvtPZZN7Ip4772aS2XAimzyD4pm6JZPMlW+zyfM13nHWZZL3li+zyftOvM+s
zSTvLV9kk3ebzfEdrF/7vBLx+1LJDPp3Jnk3Op5N5lFzsUd0i7msb6K+xupd
4l42io1jLdX7RA82lk1mddTbxT1sCBvF6ql3ig5sGHuU1VXvEO3ZUPYIq65+
L5O8K5yJ55y8pnhf3M0G6huur5Z6q2jLBrERrLZ6m2jHBrORrIV6r+jOxrBJ
bGccN/aDumxcZ6yR+kPRxbaRbCxroP5AdGLD2WjWUP0f0ZmNYGPYY+ovxDNs
FVvPhuW86xVidWPGim/ly9nV1lrqRvruV9fQ+yh7nb3FHmC3s8fYG2wl68/q
sCfjGmZrWS9WnT3ClrA343NjFrCpbB3bwt7MJs+3GWxDfL94b9BXmz0R96d6
jb6RcQ2w2Wwz28GGx/XDZrKNbBt7Sz6TH1HnFhexpdnkOTM2nTw/4zk6VM8d
bApbq96sbwirzyazNWwTG8TqsUnsHbaR7Yo5z39RFxOl2R72D/arunicO7Y2
Z26cy7mH4l76OGY8S1tLqcvr+0j+CstlLcnKsYPxrGFZa5mYOexAPMNYxlo6
7kk2WF3X50xkq9mG+L8irlG2kO1lh+I4y2fww+qMyMt6xv2qb2R8VrxbsLfl
s/hRdQGRnx1mP7Dc1mqsbrwfqO+y7yK2jx2O4yyfyj9Wn433npixOc/kXunk
3Tneoa/y3G/JXkgn5zvO+0nNJzLJ94/fsdi2fOrVopK8Letk23l53njntXZg
XdlFelaJiuxu9of4PyDnfa1cOnlWxjPziPwnfXmtNdT19R2S/8jyWKuzemxr
zrO2WDq5N+IeOZLzHlsznbz7xTvgBflF7EZrR/V9dhsb84nNZzvZvngHjucE
e559wPazFfLp/JA6l8jDxsfc1LfAtj3sIFsmf5ofUJ9LvlZqOZvGDsZ3SCX/
/z4VM9zGl2zbzQ+wldnkOL/IdrEPY97FvGZz2Bb1Tn2j2e/Yc2w72xP/V8RM
Yy+z/fH72Rh2J5vHdrC9bETMdTaLbWLb2eOsGZvLtrHd7Ca2PpP8f3Iyjpn8
Nzpb134=
             "]]},
           Annotation[#, "Charting`Private`Tag$55924#1"]& ]],
         Lighting->{{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {{}, {}, {}, 
       {GrayLevel[0.2], 
        Line3DBox[{251, 474, 1107, 252, 488, 280, 1214, 503, 295, 1218, 518, 
         310, 1224, 533, 325, 1232, 548, 340, 1242, 563, 355, 1255, 578, 1160,
          370, 593, 1173, 385, 1271, 608, 400, 1275, 623, 415, 1281, 638, 430,
          1290, 653, 445, 1299, 668, 460}], 
        Line3DBox[{253, 475, 1108, 254, 489, 1120, 281, 504, 296, 1219, 519, 
         311, 1225, 534, 326, 1233, 549, 341, 1243, 564, 356, 1256, 579, 1161,
          371, 594, 1174, 386, 609, 401, 1276, 624, 416, 1282, 639, 431, 1291,
          654, 446, 1300, 669, 461}], 
        Line3DBox[{255, 476, 1109, 256, 490, 1121, 282, 505, 1131, 297, 520, 
         312, 1226, 535, 327, 1234, 550, 342, 1244, 565, 357, 1257, 580, 1162,
          372, 595, 1175, 387, 610, 1185, 402, 625, 417, 1283, 640, 432, 1292,
          655, 447, 1301, 670, 462}], 
        Line3DBox[{257, 477, 1110, 258, 491, 1122, 283, 506, 1132, 298, 521, 
         1140, 313, 536, 328, 1235, 551, 343, 1245, 566, 358, 1258, 581, 1163,
          373, 596, 1176, 388, 611, 1186, 403, 626, 1194, 418, 1284, 641, 433,
          1293, 656, 448, 1302, 671, 463}], 
        Line3DBox[{259, 478, 1111, 260, 492, 1123, 284, 507, 1133, 299, 522, 
         1141, 314, 537, 1148, 329, 552, 344, 1246, 567, 359, 1259, 582, 1164,
          374, 597, 1177, 389, 612, 1187, 404, 627, 1195, 419, 642, 1201, 434,
          657, 449, 1303, 672, 464}], 
        Line3DBox[{261, 479, 1112, 262, 493, 1124, 285, 508, 1134, 300, 523, 
         1142, 315, 538, 1149, 330, 553, 1154, 345, 568, 360, 1260, 583, 1165,
          375, 598, 1178, 390, 613, 1188, 405, 628, 1196, 420, 643, 1202, 435,
          658, 1206, 450, 673, 465}], 
        Line3DBox[{263, 480, 1113, 265, 494, 1125, 286, 509, 1135, 301, 524, 
         1143, 316, 539, 1150, 331, 554, 1155, 346, 569, 1158, 361, 584, 1166,
          376, 599, 1179, 391, 614, 1189, 406, 629, 1197, 421, 644, 1203, 436,
          659, 1207, 451, 674, 1209, 466}], 
        Line3DBox[{267, 482, 1114, 268, 1212, 496, 288, 1216, 511, 303, 1221, 
         526, 318, 1228, 541, 333, 1237, 556, 348, 1248, 571, 363, 1262, 586, 
         1167, 378, 601, 393, 1273, 616, 408, 1278, 631, 423, 1286, 646, 438, 
         1295, 661, 453, 1305, 676, 468}], 
        Line3DBox[{269, 483, 1115, 270, 497, 1126, 289, 512, 304, 1222, 527, 
         319, 1229, 542, 334, 1238, 557, 349, 1249, 572, 364, 1263, 587, 1168,
          379, 602, 1180, 394, 617, 409, 1279, 632, 424, 1287, 647, 439, 1296,
          662, 454, 1306, 677, 469}], 
        Line3DBox[{271, 484, 1116, 272, 498, 1127, 290, 513, 1136, 305, 528, 
         1144, 320, 1230, 543, 335, 1239, 558, 350, 1250, 573, 365, 1264, 588,
          1169, 380, 603, 1181, 395, 618, 1190, 410, 633, 425, 1288, 648, 440,
          1297, 663, 455, 1307, 678, 470}], 
        Line3DBox[{273, 485, 1117, 274, 499, 1128, 291, 514, 1137, 306, 529, 
         1145, 321, 544, 1151, 336, 1240, 559, 351, 1251, 574, 366, 1265, 589,
          1170, 381, 604, 1182, 396, 619, 1191, 411, 634, 1198, 426, 649, 441,
          1298, 664, 456, 1308, 679, 471}], 
        Line3DBox[{275, 486, 1118, 276, 500, 1129, 292, 515, 1138, 307, 530, 
         1146, 322, 545, 1152, 337, 560, 1156, 352, 1252, 575, 367, 1266, 590,
          1171, 382, 605, 1183, 397, 620, 1192, 412, 635, 1199, 427, 650, 
         1204, 442, 665, 457, 1309, 680, 472}], 
        Line3DBox[{277, 682, 683, 1119, 278, 501, 1130, 293, 516, 1139, 308, 
         531, 1147, 323, 546, 1153, 338, 561, 1157, 353, 1253, 576, 368, 1267,
          591, 1172, 383, 606, 1184, 398, 621, 1193, 413, 636, 1200, 428, 651,
          1205, 443, 666, 1208, 458, 685, 686, 687}], 
        Line3DBox[{459, 667, 1310, 684, 444, 652, 1289, 429, 637, 1280, 414, 
         622, 1274, 399, 607, 1270, 384, 592, 1268, 369, 1159, 577, 1254, 354,
          562, 1241, 339, 547, 1231, 324, 532, 1223, 309, 517, 1217, 294, 502,
          1213, 279, 487, 1210, 250, 473, 681, 688}], 
        Line3DBox[{467, 675, 1304, 452, 660, 1294, 437, 645, 1285, 422, 630, 
         1277, 407, 615, 1272, 392, 600, 1269, 377, 585, 1261, 362, 570, 1247,
          347, 555, 1236, 332, 540, 1227, 317, 525, 1220, 302, 510, 1215, 287,
          495, 1211, 266, 481, 264}]}, 
       {GrayLevel[0.2], 
        Line3DBox[{690, 1001, 473, 689, 1107, 912, 691, 1108, 913, 692, 1109, 
         914, 693, 1110, 915, 694, 1111, 916, 695, 1112, 917, 696, 1113, 481, 
         697, 1114, 918, 698, 1115, 919, 699, 1116, 920, 700, 1117, 921, 701, 
         1118, 922, 702, 1106, 1119, 923, 1002}], 
        Line3DBox[{704, 1007, 1210, 703, 488, 705, 1120, 924, 706, 1121, 925, 
         707, 1122, 926, 708, 1123, 927, 709, 1124, 928, 710, 1125, 1008, 
         1211, 711, 1009, 1212, 712, 1126, 929, 713, 1127, 930, 714, 1128, 
         931, 715, 1129, 932, 716, 1130, 933, 717}], 
        Line3DBox[{719, 1010, 1213, 718, 1011, 1214, 720, 504, 721, 1131, 934,
          722, 1132, 935, 723, 1133, 936, 724, 1134, 937, 725, 1135, 1012, 
         1215, 726, 1013, 1216, 727, 512, 728, 1136, 938, 729, 1137, 939, 730,
          1138, 940, 731, 1139, 941, 732}], 
        Line3DBox[{734, 1014, 1217, 733, 1015, 1218, 735, 1016, 1219, 736, 
         520, 737, 1140, 942, 738, 1141, 943, 739, 1142, 944, 740, 1143, 1017,
          1220, 741, 1018, 1221, 742, 1019, 1222, 743, 1144, 945, 744, 1145, 
         946, 745, 1146, 947, 746, 1147, 948, 747}], 
        Line3DBox[{749, 1020, 1223, 748, 1021, 1224, 750, 1022, 1225, 751, 
         1023, 1226, 752, 536, 753, 1148, 949, 754, 1149, 950, 755, 1150, 
         1024, 1227, 756, 1025, 1228, 757, 1026, 1229, 758, 1027, 1230, 759, 
         1151, 951, 760, 1152, 952, 761, 1153, 953, 762}], 
        Line3DBox[{764, 1028, 1231, 763, 1029, 1232, 765, 1030, 1233, 766, 
         1031, 1234, 767, 1032, 1235, 768, 552, 769, 1154, 954, 770, 1155, 
         1033, 1236, 771, 1034, 1237, 772, 1035, 1238, 773, 1036, 1239, 774, 
         1037, 1240, 775, 1156, 955, 776, 1157, 956, 777}], 
        Line3DBox[{779, 1038, 1241, 778, 1039, 1242, 780, 1040, 1243, 781, 
         1041, 1244, 782, 1042, 1245, 783, 1043, 1246, 784, 568, 785, 1158, 
         1044, 1247, 786, 1045, 1248, 787, 1046, 1249, 788, 1047, 1250, 789, 
         1048, 1251, 790, 1049, 1252, 791, 1050, 1253, 792}], 
        Line3DBox[{796, 1159, 957, 794, 1160, 958, 798, 1161, 959, 800, 1162, 
         960, 802, 1163, 961, 804, 1164, 962, 806, 1165, 963, 808, 1166, 585, 
         810, 1167, 964, 812, 1168, 965, 814, 1169, 966, 816, 1170, 967, 818, 
         1171, 968, 820, 1172, 969, 822}], 
        Line3DBox[{821, 1267, 1063, 819, 1266, 1062, 817, 1265, 1061, 815, 
         1264, 1060, 813, 1263, 1059, 811, 1262, 1058, 809, 1261, 584, 807, 
         1260, 1057, 805, 1259, 1056, 803, 1258, 1055, 801, 1257, 1054, 799, 
         1256, 1053, 797, 1255, 1052, 793, 1254, 1051, 795}], 
        Line3DBox[{824, 1064, 1268, 823, 1173, 970, 825, 1174, 971, 826, 1175,
          972, 827, 1176, 973, 828, 1177, 974, 829, 1178, 975, 830, 1179, 
         1065, 1269, 831, 601, 832, 1180, 976, 833, 1181, 977, 834, 1182, 978,
          835, 1183, 979, 836, 1184, 980, 837}], 
        Line3DBox[{839, 1066, 1270, 838, 1067, 1271, 840, 609, 841, 1185, 981,
          842, 1186, 982, 843, 1187, 983, 844, 1188, 984, 845, 1189, 1068, 
         1272, 846, 1069, 1273, 847, 617, 848, 1190, 985, 849, 1191, 986, 850,
          1192, 987, 851, 1193, 988, 852}], 
        Line3DBox[{854, 1070, 1274, 853, 1071, 1275, 855, 1072, 1276, 856, 
         625, 857, 1194, 989, 858, 1195, 990, 859, 1196, 991, 860, 1197, 1073,
          1277, 861, 1074, 1278, 862, 1075, 1279, 863, 633, 864, 1198, 992, 
         865, 1199, 993, 866, 1200, 994, 867}], 
        Line3DBox[{869, 1076, 1280, 868, 1077, 1281, 870, 1078, 1282, 871, 
         1079, 1283, 872, 1080, 1284, 873, 1201, 995, 874, 1202, 996, 875, 
         1203, 1081, 1285, 876, 1082, 1286, 877, 1083, 1287, 878, 1084, 1288, 
         879, 649, 880, 1204, 997, 881, 1205, 998, 882}], 
        Line3DBox[{884, 1085, 1289, 883, 1086, 1290, 885, 1087, 1291, 886, 
         1088, 1292, 887, 1089, 1293, 888, 657, 889, 1206, 999, 890, 1207, 
         1090, 1294, 891, 1091, 1295, 892, 1092, 1296, 893, 1093, 1297, 894, 
         1094, 1298, 895, 665, 896, 1208, 1000, 897}], 
        Line3DBox[{911, 1006, 685, 910, 1309, 1105, 909, 1308, 1104, 908, 
         1307, 1103, 907, 1306, 1102, 906, 1305, 1101, 905, 1304, 1100, 1209, 
         904, 673, 903, 1303, 1099, 902, 1302, 1098, 901, 1301, 1097, 900, 
         1300, 1096, 899, 1299, 1095, 898, 1310, 1004, 1003, 1005}]}}},
     VertexNormals->CompressedData["
1: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
xBvE8xHPw8JjNDe8wz1K27lH6RyBl/IrHSl33Js7kEd1LFbiH2ge3YlDXmei
TPep76+0Jn6Jiw9RYviQlE+P6L393JeQLzlO73b++GmLvEjZkPYXAR1R/fIn
bHV6WQLj0L99KfuAXz7mBT1aLHyOl9U0+H/OAfofivu1dK9wonQ43ctwpfqZ
aV/pPmCjLS/qJAcoUj7Q8nYh7JnBUif5ty5Oi6suTpup0/vAVafXIf4J7U5Z
+gL2zFpG7110HKR8WL79M/CpFobAW5sGYpwYt2yDnlfx1YRvTwfPI1BrCXzP
Fzq/YPNbgcAn+N86js5zy0bL47tktLOoDuS8P+27fSju2SRnI/95P4jqD+Nn
0HsF3OP573xRz87B+66BZ+9iPG87Outf69ySmTq3fff4EX9cROicZeQhOl+W
uxeFdflcAcWrwBi6Hy3h4Qo7+x78Bv5Dld6PKimZgH7nqRhM71yJewK3zqiC
H35+ugz5e/P70K5moRndLxt0m97XipaGH3yvGCOu6g6i+1wBEnOhp8+lne6r
Vn0nfuAQ1TN7jj6LeifPRjnof5s0p996szuioXTPlNeZ+Cs1Oje0+nUT3zX1
IZ2Hypj8Jn4pLBfjYVsUvaMieYPqH64v9IB/Jr2i/eDspRP+cV7TwcVHlXKd
E7kw50QfNfPxHvuLqafhB8U6mhdsdVxsPNXcU1bIw4Nm0rsHP8WI11UrIJ7N
cjW99yLfRuu11oWbVM+mI0/7X42TdM7+vpbGlS6Nc6dTO4iXa86kuu7DdN5n
qOtO9ZAsdVBs/NXArd303uBl4kv9LtN5tJ+FAuyJkaQ4sM2c6mpGh4RjXZNd
RO9gWxi445ziEVdd0AKmLoiN15q0vhr6f22lvNqqjfgNtroXNr7L4cJv6NnT
8w54sfld4Iumb4ffnMrp/aVPQn+Ih5SPhJ7zGunA+b4Tv1qVvwD41m9H0a6Q
pR3k7d5tAx5WXk/3XGyb6RyzPpzqUn5Svr3NVQh62OoxLszSgj2fwmlcPZCh
d2b2DqXzwafrWnG/adThB8j32HgwjYRR6MfE8FTkz+V7liDemmbows/Pa2To
/wjy1ODPc49ewx5JExfI35al94HZeDCRpy6Iw+FH6Xxq9i26F89zSJnyojR6
V+FaPZ2/75mriu96sYvq510NKD6w7ZsqVh7A9157T/cog3XnUxzgqlvwZeoW
XvHsp/ti35qA10yjOrrwCqpXzB6qAv2ib+mcNNh2Ovxgo0fvVQ7eQ/eV2N7/
MVOn8+4t477Dnp7MeuC82eL0vz+f6dxw3qLP0P/doglxNU2W8i6bqX391g+o
jLXEedPl+3QO/iKM1hdBrvqB2Uz9wA2m/nAeU38YydQfNuVPpDi/YTr6944q
vQ+QYdoM/9c6mUD/m5W7KP8xfIJ5seK8PuVj++j++BjTcoyrovuUJ5xaRvVI
bHWhDSzxkO1c/qumI/zj10X4t/t0f9x35xuKe7OMKD9pe038VdUD9Fd1zm7g
m0bQvYCOsavpnhHz3tRaF7pP6iIWAHt2q9XBnoOHKD/5e359m+v8mm8DL8aP
ciT5oX0ZnYvx9ORjHo08TePh2zB6929h6mh6R0h/MfaJ6voJdC+Y69y2lzm3
LRM7jP24TWYE8PWd9O4K27lk8c8GjIdcMyv04+I8endUL/ca4vn2DkPYMynD
uV8eTPnIdvTjitX0vtm0KTuBf+l1ovvCKTQ+14TT/SPxgfF030qWxklAyGp6
n2d+FN6Bj19J9/i25tA7XYss+tC/zesoz488R++clzD3ee1DKQ5sjKX4MN3y
D+bLxzsydP44g+6Pd7okYVwVxNK7hQ0NJZCf4GuIvHrM6BI6F4hVBz6+rhM8
jO01em8qI5R4xeTRk4Bv9HtLeUtAAfyZpEnvE9YU035nxgo+6GG7Z8fGg4WJ
t+J7r0hRHUXFgOvQc3xLAtr13Ek89tfHo4Cnzi5AvhEdTO8sJSlSPskWN9je
QT2if4Dqxxa/o3cMbqzAdwmFmmEeaSTQOhj4VZHWEZZ7stz/5/L33QBL9RPg
u3ZrUf4WPXAg7LF/9xX527E3dG8o5A69U7HKSwl+OBtD7/6FjNKj7xLwp3v9
NhSvLr2kOs/YKTfpvS8DOneOGJIEfGn7Cnzv9O6h+N7GuK/43hcR+dC/xIve
Bx6g6Av/px/MQT9W5uRiHfwjHod18O6M09ATPt4HvMcrqadY7xzDDqJfbpUv
xPdq+9E+OtNVAvPdq47qVV5E7oB+kcTt8HNqI70n4/Ga6uHl7S9T3viO+LEl
E4j/KTSfDTt/P6f3IYefJt67nCt/4GfyB3Gpm/D/ifN0r7x5Ca37M4seot1b
X/4A97V62y8P9p++L2rAvC/qwbwvavz/6H3R/1/eEbU3tkC7x+fQvjJOjs4j
vOwd6D5pJb0/MMa1mc4F6uk9nBn+dL6TqUP1Fb6NAfDDggrKh3WOZwHPPrkV
9vheqgJ+fxu9k3nuoRPWqVMLKU4OOHoFfmgQOAn51i6qu7t5ie4pf9Kkdx60
CojvilSnd/6VjsxsIzupfju2qAj4lzW+WEesHOge/VVDuo9fmtiKee3XS++l
WDpSnWHMQVV8b4gnvWt39wP9D+mVLHqHs3kvxW3TX8QPlOYE0zs8ejrAN6yj
OOYru5Tq07bUQ/+eAOK7xm8fRXULcXQvOzTGvl9+zJllHd8joYJ2E5Xo3Mrh
Nd0LeGakTv1lIw/7Nw02h/0Di5Jgv47/IXp/bzjdJ1199hTaFXLtIv87Eu/0
3DINcbV0+CDIh13dSnFebznd213yCvI+aVOBlzlpUJyXpvevhsXQ/z68sGuE
nc7WH2k/dZDy3ivzF9J7dxm0vvg5SRIPxlWv8pfvYtPzvMyM8sBvPcB5fOg9
1adG9nQ/feZC2n+pEU/LVn/l+TQc+seo0XlNZhnVJ3ez8GCdLDwMN//TzPA/
DRWr8L3hF+k+ws5qureydoQ6xc9d9J7VCfH0fvXftKM6xoooWn+ztlIdxfc2
bfA5OhFLaJ21uAP5ls+tuL//uzQQ+Hndtn7PK/8X90T9vg==
      "]], {}}},
  Axes->True,
  AxesLabel->{
    FormBox["x", TraditionalForm], 
    FormBox["y", TraditionalForm], 
    FormBox["z", TraditionalForm]},
  ImageSize->{332.3212065019532, 366.9618348333288},
  ImageSizeRaw->Automatic,
  ViewPoint->{-0.7295949131134465, -3.283962486122687, 0.365077597912959},
  ViewVertical->{-0.19121755593787715`, -0.8681355196418533, 
   0.45801371795756746`}]], "Output",
 CellChangeTimes->{{3.9074572631898823`*^9, 3.9074572830182133`*^9}, 
   3.9074574499963713`*^9, 3.907457486219219*^9, 3.9074575227579775`*^9, 
   3.907457693076825*^9},
 CellLabel->
  "Out[1056]=",ExpressionUUID->"d16efeeb-d736-4f95-a0bf-a199019f88cc"]
}, Open  ]]
},
WindowSize->{1066.5, 789},
WindowMargins->{{Automatic, -24.75}, {33.75, Automatic}},
Magnification:>1. Inherited,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"125a1719-606e-48af-b844-987a6b0f6b78"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 26614, 690, 961, "Input",ExpressionUUID->"6d6cce3b-bb0e-486d-b770-6adf49ff0ce7"],
Cell[27197, 714, 1631, 27, 28, "Message",ExpressionUUID->"8653b95c-161a-411b-ba35-8b0bef836211"],
Cell[28831, 743, 41457, 712, 62, "Output",ExpressionUUID->"e63840bb-5738-4041-93a1-efca27085bb7"],
Cell[70291, 1457, 83167, 1367, 1044, 9205, 157, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"8c3f3d34-16aa-47af-a66e-8dba7d6bca86"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153495, 2829, 1731, 48, 105, "Input",ExpressionUUID->"ff09414e-3b73-4ce3-94f0-a426a76b3a3d"],
Cell[155229, 2879, 61153, 996, 383, "Output",ExpressionUUID->"d16efeeb-d736-4f95-a0bf-a199019f88cc"]
}, Open  ]]
}
]
*)

